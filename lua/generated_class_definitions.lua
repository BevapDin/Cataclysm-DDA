classes = {
    effect_type = {
        string_id = "efftype_id",
        attributes = {
            id = { type = "efftype_id" },
        },
        functions = {
            { name = "gain_game_message_type", rval = "game_message_type", args = { } },
            { name = "get_apply_memorial_log", rval = "std::string", args = { } },
            { name = "get_apply_message", rval = "std::string", args = { } },
            { name = "get_main_parts", rval = "bool", args = { } },
            { name = "get_remove_memorial_log", rval = "std::string", args = { } },
            { name = "get_remove_message", rval = "std::string", args = { } },
            { name = "lose_game_message_type", rval = "game_message_type", args = { } },
            { name = "register_ma_buff_effect", static = true, rval = nil, args = { "effect_type" } },
            { name = "use_desc_ints", rval = "bool", args = { "bool" } },
            { name = "use_name_ints", rval = "bool", args = { } },
        }
    },
    calendar = {
        new = {
            { "calendar" },
            { "int" },
            { "int", "int", "int", "season_type", "int" },
            { },
        },
        by_value_and_reference = true,
        has_equal = true,
        functions = {
            { name = "day_of_week", rval = "std::string", args = { } },
            { name = "day_of_year", rval = "int", args = { } },
            { name = "days", rval = "int", args = { } },
            { name = "diurnal_time_before", rval = "int", args = { "int" } },
            { name = "get_season", rval = "season_type", args = { } },
            { name = "get_turn", rval = "int", args = { } },
            { name = "hours", rval = "int", args = { } },
            { name = "increment", rval = nil, args = { } },
            { name = "is_night", rval = "bool", args = { } },
            { name = "minutes", rval = "int", args = { } },
            { name = "minutes_past_midnight", rval = "int", args = { } },
            { name = "once_every", static = true, rval = "bool", args = { "int" } },
            { name = "print_duration", static = true, rval = "std::string", args = { "int" } },
            { name = "print_time", rval = "std::string", args = { "bool" } },
            { name = "print_time", rval = "std::string", args = { } },
            { name = "season_length", static = true, rval = "int", args = { } },
            { name = "season_ratio", static = true, rval = "float", args = { } },
            { name = "season_turns", static = true, rval = "int", args = { } },
            { name = "seconds", rval = "int", args = { } },
            { name = "seconds_past_midnight", rval = "int", args = { } },
            { name = "sunlight", rval = "float", args = { } },
            { name = "sunrise", rval = "calendar", args = { } },
            { name = "sunset", rval = "calendar", args = { } },
            { name = "textify_period", rval = "std::string", args = { } },
            { name = "turn_of_year", rval = "int", args = { } },
            { name = "year_length", static = true, rval = "int", args = { } },
            { name = "year_turns", static = true, rval = "int", args = { } },
            { name = "years", rval = "int", args = { } },
        }
    },
    Character = {
        parent = "Creature",
        attributes = {
            dex_cur = { type = "int", writable = true },
            dex_max = { type = "int", writable = true },
            int_cur = { type = "int", writable = true },
            int_max = { type = "int", writable = true },
            last_item = { type = "std::string", writable = true },
            male = { type = "bool", writable = true },
            name = { type = "std::string", writable = true },
            nv_cached = { type = "bool", writable = true },
            per_cur = { type = "int", writable = true },
            per_max = { type = "int", writable = true },
            ret_null = { type = "item", writable = true },
            str_cur = { type = "int", writable = true },
            str_max = { type = "int", writable = true },
            weapon = { type = "item", writable = true },
            worn = { type = "std::list<item>", writable = true },
        },
        functions = {
            { name = "add_traits", rval = nil, args = { } },
            { name = "aim_per_move", rval = "float", args = { "item", "float" } },
            { name = "ammo_count_for", rval = "int", args = { "item" } },
            { name = "amount_of", rval = "int", args = { "std::string" } },
            { name = "amount_of", rval = "int", args = { "std::string", "bool" } },
            { name = "amount_of", rval = "int", args = { "std::string", "bool", "int" } },
            { name = "body_window", rval = "hp_part", args = { "bool" } },
            { name = "body_window", rval = "hp_part", args = { "std::string", "bool", "bool", "int", "int", "int", "bool", "bool", "bool" } },
            { name = "body_window", rval = "hp_part", args = { } },
            { name = "boost_skill_level", rval = nil, args = { "skill_id", "int" } },
            { name = "can_pickVolume", rval = "bool", args = { "item" } },
            { name = "can_pickVolume", rval = "bool", args = { "item", "bool" } },
            { name = "can_pickWeight", rval = "bool", args = { "item" } },
            { name = "can_pickWeight", rval = "bool", args = { "item", "bool" } },
            { name = "charges_of", rval = "int", args = { "std::string" } },
            { name = "charges_of", rval = "int", args = { "std::string", "int" } },
            { name = "drop_inventory_overflow", rval = nil, args = { } },
            { name = "effective_dispersion", rval = "int", args = { "int" } },
            { name = "empty_skills", rval = nil, args = { } },
            { name = "empty_traits", rval = nil, args = { } },
            { name = "encumb", rval = "int", args = { "body_part" } },
            { name = "find_parent", rval = "item&", args = { "item" } },
            { name = "get_base_traits", rval = "std::vector<std::string>", args = { } },
            { name = "get_dex", rval = "int", args = { } },
            { name = "get_dex_base", rval = "int", args = { } },
            { name = "get_dex_bonus", rval = "int", args = { } },
            { name = "get_fatigue", rval = "int", args = { } },
            { name = "get_healthy", rval = "int", args = { } },
            { name = "get_healthy_mod", rval = "int", args = { } },
            { name = "get_hunger", rval = "int", args = { } },
            { name = "get_int", rval = "int", args = { } },
            { name = "get_int_base", rval = "int", args = { } },
            { name = "get_int_bonus", rval = "int", args = { } },
            { name = "get_item_position", rval = "int", args = { "item" } },
            { name = "get_mutations", rval = "std::vector<std::string>", args = { } },
            { name = "get_per", rval = "int", args = { } },
            { name = "get_per_base", rval = "int", args = { } },
            { name = "get_per_bonus", rval = "int", args = { } },
            { name = "get_stomach_food", rval = "int", args = { } },
            { name = "get_stomach_water", rval = "int", args = { } },
            { name = "get_str", rval = "int", args = { } },
            { name = "get_str_base", rval = "int", args = { } },
            { name = "get_str_bonus", rval = "int", args = { } },
            { name = "get_thirst", rval = "int", args = { } },
            { name = "get_turn_died", rval = "int", args = { } },
            { name = "get_vision_threshold", rval = "float", args = { "int" } },
            { name = "has_active_bionic", rval = "bool", args = { "std::string" } },
            { name = "has_active_item", rval = "bool", args = { "std::string" } },
            { name = "has_active_mutation", rval = "bool", args = { "std::string" } },
            { name = "has_amount", rval = "bool", args = { "std::string", "int" } },
            { name = "has_amount", rval = "bool", args = { "std::string", "int", "bool" } },
            { name = "has_base_trait", rval = "bool", args = { "std::string" } },
            { name = "has_bionic", rval = "bool", args = { "std::string" } },
            { name = "has_item", rval = "bool", args = { "item" } },
            { name = "has_nv", rval = "bool", args = { } },
            { name = "has_quality", rval = "bool", args = { "quality_id" } },
            { name = "has_quality", rval = "bool", args = { "quality_id", "int" } },
            { name = "has_quality", rval = "bool", args = { "quality_id", "int", "int" } },
            { name = "has_trait_flag", rval = "bool", args = { "std::string" } },
            { name = "i_add", rval = "item&", args = { "item" } },
            { name = "i_add_or_drop", rval = "bool", args = { "item" } },
            { name = "i_add_or_drop", rval = "bool", args = { "item", "int" } },
            { name = "i_at", rval = "item&", args = { "int" } },
            { name = "i_rem", rval = "item", args = { "int" } },
            { name = "i_rem", rval = "item", args = { "item" } },
            { name = "i_rem_keep_contents", rval = nil, args = { "int" } },
            { name = "is_blind", rval = "bool", args = { } },
            { name = "is_wearing", rval = "bool", args = { "std::string" } },
            { name = "is_wearing_active_power_armor", rval = "bool", args = { } },
            { name = "is_wearing_on_bp", rval = "bool", args = { "std::string", "body_part" } },
            { name = "is_worn", rval = "bool", args = { "item" } },
            { name = "limb_color", rval = "int", args = { "body_part", "bool", "bool", "bool" } },
            { name = "max_quality", rval = "int", args = { "quality_id" } },
            { name = "mod_dex_bonus", rval = nil, args = { "int" } },
            { name = "mod_fatigue", rval = nil, args = { "int" } },
            { name = "mod_healthy", rval = nil, args = { "int" } },
            { name = "mod_healthy_mod", rval = nil, args = { "int", "int" } },
            { name = "mod_hunger", rval = nil, args = { "int" } },
            { name = "mod_int_bonus", rval = nil, args = { "int" } },
            { name = "mod_per_bonus", rval = nil, args = { "int" } },
            { name = "mod_stomach_food", rval = nil, args = { "int" } },
            { name = "mod_stomach_water", rval = nil, args = { "int" } },
            { name = "mod_str_bonus", rval = nil, args = { "int" } },
            { name = "mod_thirst", rval = nil, args = { "int" } },
            { name = "mutation_armor", rval = "float", args = { "body_part", "damage_type" } },
            { name = "mutation_effect", rval = nil, args = { "std::string" } },
            { name = "mutation_loss_effect", rval = nil, args = { "std::string" } },
            { name = "on_item_takeoff", rval = nil, args = { "item" } },
            { name = "on_item_wear", rval = nil, args = { "item" } },
            { name = "pick_name", rval = nil, args = { "bool" } },
            { name = "pick_name", rval = nil, args = { } },
            { name = "pour_into", rval = "bool", args = { "item", "item" } },
            { name = "pour_into", rval = "bool", args = { "vehicle", "item" } },
            { name = "random_bad_trait", rval = "std::string", args = { } },
            { name = "random_good_trait", rval = "std::string", args = { } },
            { name = "recalc_hp", rval = nil, args = { } },
            { name = "recalc_sight_limits", rval = nil, args = { } },
            { name = "remove_item", rval = "item", args = { "item" } },
            { name = "remove_mission_items", rval = nil, args = { "int" } },
            { name = "remove_weapon", rval = "item", args = { } },
            { name = "reset_encumbrance", rval = nil, args = { } },
            { name = "set_dex_bonus", rval = nil, args = { "int" } },
            { name = "set_fatigue", rval = nil, args = { "int" } },
            { name = "set_healthy", rval = nil, args = { "int" } },
            { name = "set_healthy_mod", rval = nil, args = { "int" } },
            { name = "set_hunger", rval = nil, args = { "int" } },
            { name = "set_int_bonus", rval = nil, args = { "int" } },
            { name = "set_mutation", rval = nil, args = { "std::string" } },
            { name = "set_per_bonus", rval = nil, args = { "int" } },
            { name = "set_skill_level", rval = nil, args = { "skill_id", "int" } },
            { name = "set_stomach_food", rval = nil, args = { "int" } },
            { name = "set_stomach_water", rval = nil, args = { "int" } },
            { name = "set_str_bonus", rval = nil, args = { "int" } },
            { name = "set_thirst", rval = nil, args = { "int" } },
            { name = "set_turn_died", rval = nil, args = { "int" } },
            { name = "skill_dispersion", rval = "int", args = { "item" } },
            { name = "throw_range", rval = "int", args = { "item" } },
            { name = "toggle_trait", rval = nil, args = { "std::string" } },
            { name = "trait_by_invlet", rval = "std::string", args = { "int" } },
            { name = "unset_mutation", rval = nil, args = { "std::string" } },
            { name = "update_health", rval = nil, args = { "int" } },
            { name = "update_health", rval = nil, args = { } },
            { name = "volume_capacity", rval = "int", args = { } },
            { name = "volume_capacity_reduced_by", rval = "int", args = { "int" } },
            { name = "volume_carried", rval = "int", args = { } },
            { name = "weight_carried", rval = "int", args = { } },
            { name = "worn_position_to_index", static = true, rval = "int", args = { "int" } },
            { name = "worn_with_flag", rval = "bool", args = { "std::string" } },
        }
    },
    map_stack = {
        by_value = true,
        functions = {
            { name = "cppbegin", rval = "std::list<item>::iterator", cpp_name = "begin", args = { } },
            { name = "cppend", rval = "std::list<item>::iterator", cpp_name = "end", args = { } },
            { name = "empty", rval = "bool", args = { } },
            { name = "erase", rval = "std::list<item>::iterator", args = { "std::list<item>::iterator" } },
            { name = "front", rval = "item&", args = { } },
            { name = "insert_at", rval = nil, args = { "std::list<item>::iterator", "item" } },
            { name = "push_back", rval = nil, args = { "item" } },
            { name = "size", rval = "int", args = { } },
        }
    },
    game = {
        attributes = {
            dangerous_proximity = { type = "int" },
            driving_view_offset = { type = "point", writable = true },
            fullscreen = { type = "bool", writable = true },
            lightning_active = { type = "bool", writable = true },
            list_item_downvote = { type = "std::string", writable = true },
            list_item_upvote = { type = "std::string", writable = true },
            monstairz = { type = "int", writable = true },
            narrow_sidebar = { type = "bool", writable = true },
            new_game = { type = "bool", writable = true },
            pixel_minimap_option = { type = "int", writable = true },
            right_sidebar = { type = "bool", writable = true },
            sFilter = { type = "std::string", writable = true },
            temperature = { type = "int", writable = true },
            ter_view_x = { type = "int", writable = true },
            ter_view_y = { type = "int", writable = true },
            ter_view_z = { type = "int", writable = true },
            was_fullscreen = { type = "bool", writable = true },
            weight_dragged = { type = "int", writable = true },
        },
        functions = {
            { name = "add_zombie", rval = "bool", args = { "monster" } },
            { name = "add_zombie", rval = "bool", args = { "monster", "bool" } },
            { name = "assign_faction_id", rval = "int", args = { } },
            { name = "assign_mission_id", rval = "int", args = { } },
            { name = "assign_npc_id", rval = "int", args = { } },
            { name = "calc_driving_offset", rval = nil, args = { "vehicle" } },
            { name = "calc_driving_offset", rval = nil, args = { } },
            { name = "cancel_activity", rval = nil, args = { } },
            { name = "check_mod_data", rval = "bool", args = { "std::vector<std::string>" } },
            { name = "check_safe_mode_allowed", rval = "bool", args = { "bool" } },
            { name = "check_safe_mode_allowed", rval = "bool", args = { } },
            { name = "check_zone", rval = "bool", args = { "std::string", "tripoint" } },
            { name = "cleanup_at_end", rval = "bool", args = { } },
            { name = "clear_zombies", rval = nil, args = { } },
            { name = "consume_liquid", rval = "bool", args = { "item" } },
            { name = "consume_liquid", rval = "bool", args = { "item", "int" } },
            { name = "critter_at", rval = "Creature&", args = { "tripoint" } },
            { name = "critter_at", rval = "Creature&", args = { "tripoint", "bool" } },
            { name = "delete_world", rval = nil, args = { "std::string", "bool" } },
            { name = "do_blast", rval = nil, args = { "tripoint", "float", "float", "bool" } },
            { name = "do_turn", rval = "bool", args = { } },
            { name = "draw", rval = nil, args = { } },
            { name = "draw_bullet", rval = nil, args = { "Creature", "tripoint", "int", "std::vector<tripoint>", "int" } },
            { name = "draw_critter", rval = nil, args = { "Creature", "tripoint" } },
            { name = "draw_explosion", rval = nil, args = { "tripoint", "int", "int" } },
            { name = "draw_hit_mon", rval = nil, args = { "tripoint", "monster" } },
            { name = "draw_hit_mon", rval = nil, args = { "tripoint", "monster", "bool" } },
            { name = "draw_hit_player", rval = nil, args = { "player", "int" } },
            { name = "draw_line", rval = nil, args = { "tripoint", "std::vector<tripoint>" } },
            { name = "draw_line", rval = nil, args = { "tripoint", "tripoint", "std::vector<tripoint>" } },
            { name = "draw_sct", rval = nil, args = { } },
            { name = "draw_ter", rval = nil, args = { "bool" } },
            { name = "draw_ter", rval = nil, args = { "tripoint" } },
            { name = "draw_ter", rval = nil, args = { "tripoint", "bool" } },
            { name = "draw_ter", rval = nil, args = { "tripoint", "bool", "bool" } },
            { name = "draw_ter", rval = nil, args = { } },
            { name = "draw_trail_to_square", rval = nil, args = { "tripoint", "bool" } },
            { name = "draw_veh_dir_indicator", rval = nil, args = { "bool" } },
            { name = "draw_zones", rval = nil, args = { "tripoint", "tripoint", "tripoint" } },
            { name = "emp_blast", rval = nil, args = { "tripoint" } },
            { name = "exam_vehicle", rval = nil, args = { "vehicle" } },
            { name = "exam_vehicle", rval = nil, args = { "vehicle", "int" } },
            { name = "exam_vehicle", rval = nil, args = { "vehicle", "int", "int" } },
            { name = "explosion", rval = nil, args = { "tripoint", "float" } },
            { name = "explosion", rval = nil, args = { "tripoint", "float", "float" } },
            { name = "explosion", rval = nil, args = { "tripoint", "float", "float", "bool" } },
            { name = "explosion", rval = nil, args = { "tripoint", "float", "float", "bool", "int" } },
            { name = "explosion", rval = nil, args = { "tripoint", "float", "float", "bool", "int", "int" } },
            { name = "find_npc", rval = "npc&", args = { "int" } },
            { name = "flashbang", rval = nil, args = { "tripoint" } },
            { name = "flashbang", rval = nil, args = { "tripoint", "bool" } },
            { name = "fling_creature", rval = nil, args = { "Creature", "int", "float" } },
            { name = "fling_creature", rval = nil, args = { "Creature", "int", "float", "bool" } },
            { name = "forced_door_closing", rval = "bool", args = { "tripoint", "ter_id", "int" } },
            { name = "game_error", rval = "bool", args = { } },
            { name = "game_quit", rval = "bool", args = { } },
            { name = "get_cur_om", rval = "overmap&", args = { } },
            { name = "get_levx", rval = "int", args = { } },
            { name = "get_levy", rval = "int", args = { } },
            { name = "get_levz", rval = "int", args = { } },
            { name = "get_temperature", rval = "int", args = { } },
            { name = "get_user_action_counter", rval = "int", args = { } },
            { name = "get_veh_dir_indicator_location", rval = "tripoint", args = { "bool" } },
            { name = "handle_all_liquid", rval = nil, args = { "item", "int" } },
            { name = "handle_liquid", rval = "bool", args = { "item" } },
            { name = "handle_liquid", rval = "bool", args = { "item", "item" } },
            { name = "handle_liquid", rval = "bool", args = { "item", "item", "int" } },
            { name = "handle_liquid_from_container", rval = "bool", args = { "item" } },
            { name = "handle_liquid_from_container", rval = "bool", args = { "item", "int" } },
            { name = "handle_liquid_from_container", rval = "bool", args = { "std::list<item>::iterator", "item" } },
            { name = "handle_liquid_from_container", rval = "bool", args = { "std::list<item>::iterator", "item", "int" } },
            { name = "handle_liquid_from_ground", rval = "bool", args = { "std::list<item>::iterator", "tripoint" } },
            { name = "handle_liquid_from_ground", rval = "bool", args = { "std::list<item>::iterator", "tripoint", "int" } },
            { name = "has_gametype", rval = "bool", args = { } },
            { name = "increase_kill_count", rval = nil, args = { "mtype_id" } },
            { name = "init_ui", rval = nil, args = { } },
            { name = "interactive_inv", rval = nil, args = { } },
            { name = "inv_for_activatables", rval = "int", args = { "player", "std::string" } },
            { name = "inv_for_all", rval = "int", args = { "std::string" } },
            { name = "inv_for_all", rval = "int", args = { "std::string", "std::string" } },
            { name = "inv_for_equipped", rval = "int", args = { "std::string" } },
            { name = "inv_for_flag", rval = "int", args = { "std::string", "std::string" } },
            { name = "inv_for_id", rval = "int", args = { "std::string", "std::string" } },
            { name = "inv_for_unequipped", rval = "int", args = { "std::string" } },
            { name = "inv_map_for_liquid", rval = "item&", args = { "item", "std::string" } },
            { name = "inv_map_for_liquid", rval = "item&", args = { "item", "std::string", "int" } },
            { name = "inventory_item_menu", rval = "int", args = { "int" } },
            { name = "inventory_item_menu", rval = "int", args = { "int", "int" } },
            { name = "inventory_item_menu", rval = "int", args = { "int", "int", "int" } },
            { name = "is_empty", rval = "bool", args = { "tripoint" } },
            { name = "is_hostile_nearby", rval = "Creature&", args = { } },
            { name = "is_hostile_very_close", rval = "Creature&", args = { } },
            { name = "is_in_sunlight", rval = "bool", args = { "tripoint" } },
            { name = "is_sheltered", rval = "bool", args = { "tripoint" } },
            { name = "kill_count", rval = "int", args = { "mtype_id" } },
            { name = "knockback", rval = nil, args = { "std::vector<tripoint>", "int", "int", "int" } },
            { name = "knockback", rval = nil, args = { "tripoint", "tripoint", "int", "int", "int" } },
            { name = "light_level", rval = "int", args = { "int" } },
            { name = "list_active_characters", rval = "std::vector<std::string>", args = { } },
            { name = "list_items", rval = "int", args = { "int" } },
            { name = "list_items_monsters", rval = nil, args = { } },
            { name = "list_monsters", rval = "int", args = { "int" } },
            { name = "load_core_data", rval = nil, args = { } },
            { name = "load_map", rval = nil, args = { "tripoint" } },
            { name = "load_mission_npcs", rval = nil, args = { } },
            { name = "load_npcs", rval = nil, args = { } },
            { name = "load_static_data", rval = nil, args = { } },
            { name = "look_around", rval = "tripoint", args = { } },
            { name = "look_debug", rval = "tripoint", args = { } },
            { name = "mmenu_refresh_credits", rval = nil, args = { } },
            { name = "mmenu_refresh_motd", rval = nil, args = { } },
            { name = "mmenu_refresh_title", rval = nil, args = { } },
            { name = "mon_at", rval = "int", args = { "tripoint" } },
            { name = "mon_at", rval = "int", args = { "tripoint", "bool" } },
            { name = "monster_at", rval = "monster&", args = { "tripoint" } },
            { name = "monster_at", rval = "monster&", args = { "tripoint", "bool" } },
            { name = "moving_vehicle_dismount", rval = nil, args = { "tripoint" } },
            { name = "natural_light_level", rval = "float", args = { "int" } },
            { name = "npc_at", rval = "int", args = { "tripoint" } },
            { name = "npc_by_id", rval = "int", args = { "int" } },
            { name = "nuke", rval = nil, args = { "tripoint" } },
            { name = "num_zombies", rval = "int", args = { } },
            { name = "open_gate", rval = nil, args = { "tripoint" } },
            { name = "opening_screen", rval = "bool", args = { } },
            { name = "peek", rval = nil, args = { "tripoint" } },
            { name = "peek", rval = nil, args = { } },
            { name = "pl_refill_vehicle", rval = "bool", args = { "vehicle", "int" } },
            { name = "pl_refill_vehicle", rval = "bool", args = { "vehicle", "int", "bool" } },
            { name = "plfire", rval = "bool", args = { } },
            { name = "plswim", rval = nil, args = { "tripoint" } },
            { name = "process_artifact", rval = nil, args = { "item", "player" } },
            { name = "reenter_fullscreen", rval = nil, args = { } },
            { name = "refill_vehicle_part", rval = "bool", args = { "vehicle", "vehicle_part" } },
            { name = "refill_vehicle_part", rval = "bool", args = { "vehicle", "vehicle_part", "bool" } },
            { name = "refresh_all", rval = nil, args = { } },
            { name = "reload_npcs", rval = nil, args = { } },
            { name = "remoteveh", rval = "vehicle&", args = { } },
            { name = "remove_zombie", rval = nil, args = { "int" } },
            { name = "reset_light_level", rval = nil, args = { } },
            { name = "reset_zoom", rval = nil, args = { } },
            { name = "resonance_cascade", rval = nil, args = { "tripoint" } },
            { name = "revive_corpse", rval = "bool", args = { "tripoint", "item" } },
            { name = "save", rval = "bool", args = { } },
            { name = "scrambler_blast", rval = nil, args = { "tripoint" } },
            { name = "set_driving_view_offset", rval = nil, args = { "point" } },
            { name = "setremoteveh", rval = nil, args = { "vehicle" } },
            { name = "setup", rval = nil, args = { } },
            { name = "shockwave", rval = nil, args = { "tripoint", "int", "int", "int", "int", "bool" } },
            { name = "spawn_hallucination", rval = "bool", args = { } },
            { name = "spread_fungus", rval = "bool", args = { "tripoint" } },
            { name = "start_calendar", rval = nil, args = { } },
            { name = "summon_mon", rval = "bool", args = { "mtype_id", "tripoint" } },
            { name = "swap_critters", rval = "bool", args = { "Creature", "Creature" } },
            { name = "teleport", rval = nil, args = { "player" } },
            { name = "teleport", rval = nil, args = { "player", "bool" } },
            { name = "teleport", rval = nil, args = { } },
            { name = "temp_exit_fullscreen", rval = nil, args = { } },
            { name = "toggle_fullscreen", rval = nil, args = { } },
            { name = "toggle_pixel_minimap", rval = nil, args = { } },
            { name = "toggle_sidebar_style", rval = nil, args = { } },
            { name = "unload", rval = "bool", args = { "item" } },
            { name = "unload", rval = nil, args = { "int" } },
            { name = "unload", rval = nil, args = { } },
            { name = "unload_npcs", rval = nil, args = { } },
            { name = "update_map", rval = nil, args = { "player" } },
            { name = "update_overmap_seen", rval = nil, args = { } },
            { name = "update_zombie_pos", rval = "bool", args = { "monster", "tripoint" } },
            { name = "use_computer", rval = nil, args = { "tripoint" } },
            { name = "vertical_move", rval = nil, args = { "int", "bool" } },
            { name = "vertical_notes", rval = nil, args = { "int", "int" } },
            { name = "vertical_shift", rval = nil, args = { "int" } },
            { name = "write_memorial_file", rval = nil, args = { "std::string" } },
            { name = "zombie", rval = "monster&", args = { "int" } },
            { name = "zones_manager", rval = nil, args = { } },
            { name = "zoom_in", rval = nil, args = { } },
            { name = "zoom_out", rval = nil, args = { } },
        }
    },
    encumbrance_data = {
        by_value = true,
        has_equal = true,
        attributes = {
            armor_encumbrance = { type = "int", writable = true },
            encumbrance = { type = "int", writable = true },
            layer_penalty = { type = "int", writable = true },
        },
    },
    stats = {
        attributes = {
            damage_healed = { type = "int", writable = true },
            damage_taken = { type = "int", writable = true },
            headshots = { type = "int", writable = true },
            squares_walked = { type = "int", writable = true },
        },
        functions = {
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "reset", rval = nil, args = { } },
            { name = "serialize", rval = "std::string", args = { } },
        }
    },
    player = {
        parent = "Character",
        attributes = {
            blocks_left = { type = "int", writable = true },
            cash = { type = "int", writable = true },
            controlling_vehicle = { type = "bool", writable = true },
            dodges_left = { type = "int", writable = true },
            focus_pool = { type = "int", writable = true },
            grab_point = { type = "tripoint", writable = true },
            in_vehicle = { type = "bool", writable = true },
            keep_hands_free = { type = "bool", writable = true },
            last_batch = { type = "int", writable = true },
            last_climate_control_ret = { type = "bool", writable = true },
            lastconsumed = { type = "std::string", writable = true },
            lastrecipe = { type = "std::string", writable = true },
            ma_styles = { type = "std::vector<matype_id>", writable = true },
            max_power_level = { type = "int", writable = true },
            memorial_log = { type = "std::vector<std::string>", writable = true },
            move_mode = { type = "std::string", writable = true },
            movecounter = { type = "int", writable = true },
            next_climate_control_check = { type = "int", writable = true },
            oxygen = { type = "int", writable = true },
            power_level = { type = "int", writable = true },
            radiation = { type = "int", writable = true },
            reactor_plut = { type = "int", writable = true },
            recoil = { type = "float", writable = true },
            scent = { type = "int", writable = true },
            slow_rad = { type = "int", writable = true },
            stamina = { type = "int", writable = true },
            start_location = { type = "start_location_id", writable = true },
            stim = { type = "int", writable = true },
            style_selected = { type = "matype_id", writable = true },
            tank_plut = { type = "int", writable = true },
            view_offset = { type = "tripoint", writable = true },
            volume = { type = "int", writable = true },
        },
        functions = {
            { name = "action_taken", rval = nil, args = { } },
            { name = "activate_bionic", rval = "bool", args = { "int" } },
            { name = "activate_bionic", rval = "bool", args = { "int", "bool" } },
            { name = "active_light", rval = "float", args = { } },
            { name = "add_addiction", rval = nil, args = { "add_type", "int" } },
            { name = "add_bionic", rval = nil, args = { "std::string" } },
            { name = "add_known_trap", rval = nil, args = { "tripoint", "trap" } },
            { name = "add_martialart", rval = nil, args = { "matype_id" } },
            { name = "add_morale", rval = nil, args = { "morale_type", "int" } },
            { name = "add_morale", rval = nil, args = { "morale_type", "int", "int" } },
            { name = "add_morale", rval = nil, args = { "morale_type", "int", "int", "int" } },
            { name = "add_morale", rval = nil, args = { "morale_type", "int", "int", "int", "int" } },
            { name = "add_morale", rval = nil, args = { "morale_type", "int", "int", "int", "int", "bool" } },
            { name = "add_morale", rval = nil, args = { "morale_type", "int", "int", "int", "int", "bool", "itype" } },
            { name = "add_pain_msg", rval = nil, args = { "int", "body_part" } },
            { name = "addiction_level", rval = "int", args = { "add_type" } },
            { name = "adjacent_tile", rval = "tripoint", args = { } },
            { name = "adjust_for_focus", rval = "int", args = { "int" } },
            { name = "allergy_type", rval = "morale_type", args = { "item" } },
            { name = "amount_worn", rval = "int", args = { "std::string" } },
            { name = "apply_persistent_morale", rval = nil, args = { } },
            { name = "apply_wetness_morale", rval = nil, args = { "int" } },
            { name = "attack_speed", rval = "int", args = { "item" } },
            { name = "attack_speed", rval = "int", args = { "item", "bool" } },
            { name = "best_shield", rval = "item&", args = { } },
            { name = "bionic_armor_bonus", rval = "float", args = { "body_part", "damage_type" } },
            { name = "blossoms", rval = nil, args = { } },
            { name = "bodytemp_color", rval = "int", args = { "int" } },
            { name = "bonus_damage", rval = "float", args = { "bool" } },
            { name = "bonus_item_warmth", rval = "int", args = { "body_part" } },
            { name = "bp_to_hp", static = true, rval = "hp_part", args = { "body_part" } },
            { name = "burn_move_stamina", rval = nil, args = { "int" } },
            { name = "calc_focus_equilibrium", rval = "int", args = { } },
            { name = "can_arm_block", rval = "bool", args = { } },
            { name = "can_hear", rval = "bool", args = { "tripoint", "int" } },
            { name = "can_leg_block", rval = "bool", args = { } },
            { name = "can_limb_block", rval = "bool", args = { } },
            { name = "can_melee", rval = "bool", args = { } },
            { name = "can_reload", rval = "bool", args = { "item" } },
            { name = "can_reload", rval = "bool", args = { "item", "std::string" } },
            { name = "can_sleep", rval = "bool", args = { } },
            { name = "can_unwield", rval = "bool", args = { "item" } },
            { name = "can_unwield", rval = "bool", args = { "item", "bool" } },
            { name = "can_use", rval = "bool", args = { "item" } },
            { name = "can_use", rval = "bool", args = { "item", "bool" } },
            { name = "can_weapon_block", rval = "bool", args = { } },
            { name = "can_wear", rval = "bool", args = { "item" } },
            { name = "can_wear", rval = "bool", args = { "item", "bool" } },
            { name = "can_wield", rval = "bool", args = { "item" } },
            { name = "can_wield", rval = "bool", args = { "item", "bool" } },
            { name = "cancel_activity", rval = nil, args = { } },
            { name = "change_side", rval = "bool", args = { "int" } },
            { name = "change_side", rval = "bool", args = { "int", "bool" } },
            { name = "change_side", rval = "bool", args = { "item" } },
            { name = "change_side", rval = "bool", args = { "item", "bool" } },
            { name = "charge_power", rval = nil, args = { "int" } },
            { name = "check_and_recover_morale", rval = nil, args = { } },
            { name = "check_needs_extremes", rval = nil, args = { } },
            { name = "clairvoyance", rval = "int", args = { } },
            { name = "clear_destination", rval = nil, args = { } },
            { name = "clear_miss_reasons", rval = nil, args = { } },
            { name = "climbing_cost", rval = "int", args = { "tripoint", "tripoint" } },
            { name = "complete_craft", rval = nil, args = { } },
            { name = "complete_disassemble", rval = nil, args = { } },
            { name = "consume", rval = "bool", args = { "int" } },
            { name = "consume_charges", rval = "bool", args = { "item", "int" } },
            { name = "consume_effects", rval = nil, args = { "item" } },
            { name = "consume_effects", rval = nil, args = { "item", "bool" } },
            { name = "consume_item", rval = "bool", args = { "item" } },
            { name = "consume_med", rval = "bool", args = { "item", "tripoint" } },
            { name = "cough", rval = nil, args = { "bool" } },
            { name = "cough", rval = nil, args = { "bool", "int" } },
            { name = "cough", rval = nil, args = { } },
            { name = "craft", rval = nil, args = { } },
            { name = "crit_chance", rval = "float", args = { "int", "int", "item" } },
            { name = "crossed_threshold", rval = "bool", args = { } },
            { name = "deactivate_bionic", rval = "bool", args = { "int" } },
            { name = "deactivate_bionic", rval = "bool", args = { "int", "bool" } },
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "disassemble", rval = "bool", args = { "int" } },
            { name = "disassemble", rval = "bool", args = { "item", "int", "bool" } },
            { name = "disassemble", rval = "bool", args = { "item", "int", "bool", "bool" } },
            { name = "disassemble", rval = "bool", args = { } },
            { name = "disassemble_all", rval = nil, args = { "bool" } },
            { name = "disp_info", rval = nil, args = { } },
            { name = "disp_morale", rval = nil, args = { } },
            { name = "do_read", rval = nil, args = { "item" } },
            { name = "drench", rval = nil, args = { "int", "int", "bool" } },
            { name = "drench_mut_calc", rval = nil, args = { } },
            { name = "drink_from_hands", rval = "int", args = { "item" } },
            { name = "drop", rval = nil, args = { "int" } },
            { name = "drop", rval = nil, args = { "int", "tripoint" } },
            { name = "dump_memorial", rval = "std::string", args = { } },
            { name = "eat", rval = "bool", args = { "item" } },
            { name = "eat", rval = "bool", args = { "item", "bool" } },
            { name = "environmental_revert_effect", rval = nil, args = { } },
            { name = "fall_asleep", rval = nil, args = { "int" } },
            { name = "fine_detail_vision_mod", rval = "float", args = { } },
            { name = "fire_gun", rval = "int", args = { "tripoint" } },
            { name = "fire_gun", rval = "int", args = { "tripoint", "int" } },
            { name = "fire_gun", rval = "int", args = { "tripoint", "int", "item" } },
            { name = "footwear_factor", rval = "float", args = { } },
            { name = "fun_to_read", rval = "bool", args = { "item" } },
            { name = "getID", rval = "int", args = { } },
            { name = "get_active_mission_target", rval = "tripoint", args = { } },
            { name = "get_all_techniques", rval = "std::vector<matec_id>", args = { } },
            { name = "get_armor_acid", rval = "int", args = { "body_part" } },
            { name = "get_armor_fire", rval = "int", args = { "body_part" } },
            { name = "get_auto_move_route", rval = "std::vector<tripoint>", args = { } },
            { name = "get_book_reader", rval = "player&", args = { "item", "std::vector<std::string>" } },
            { name = "get_category_dream", rval = "std::string", args = { "std::string", "int" } },
            { name = "get_combat_style", rval = "martialart&", args = { } },
            { name = "get_eligible_containers_for_crafting", rval = "std::vector<item>", args = { } },
            { name = "get_free_bionics_slots", rval = "int", args = { "body_part" } },
            { name = "get_highest_category", rval = "std::string", args = { } },
            { name = "get_hit_weapon", rval = "int", args = { "item" } },
            { name = "get_morale_level", rval = "int", args = { } },
            { name = "get_overlay_ids", rval = "std::vector<std::string>", args = { } },
            { name = "get_painkiller", rval = "int", args = { } },
            { name = "get_sick", rval = nil, args = { } },
            { name = "get_stamina_max", rval = "int", args = { } },
            { name = "get_total_bionics_slots", rval = "int", args = { "body_part" } },
            { name = "get_used_bionics_slots", rval = "int", args = { "body_part" } },
            { name = "get_weapon_dispersion", rval = "float", args = { "item" } },
            { name = "get_wind_resistance", rval = "int", args = { "body_part" } },
            { name = "global_omt_location", rval = "tripoint", args = { } },
            { name = "global_sm_location", rval = "tripoint", args = { } },
            { name = "global_square_location", rval = "tripoint", args = { } },
            { name = "gun_current_range", rval = "float", args = { "item" } },
            { name = "gun_current_range", rval = "float", args = { "item", "float" } },
            { name = "gun_current_range", rval = "float", args = { "item", "float", "int" } },
            { name = "gun_current_range", rval = "float", args = { "item", "float", "int", "float" } },
            { name = "gun_engagement_moves", rval = "int", args = { "item" } },
            { name = "gun_value", rval = "float", args = { "item" } },
            { name = "gun_value", rval = "float", args = { "item", "int" } },
            { name = "gunmod_add", rval = nil, args = { "item", "item" } },
            { name = "gunmod_remove", rval = "bool", args = { "item", "item" } },
            { name = "handle_gun_damage", rval = "bool", args = { "item" } },
            { name = "handle_melee_wear", rval = "bool", args = { "float" } },
            { name = "handle_melee_wear", rval = "bool", args = { "item" } },
            { name = "handle_melee_wear", rval = "bool", args = { "item", "float" } },
            { name = "handle_melee_wear", rval = "bool", args = { } },
            { name = "hardcoded_effects", rval = nil, args = { "effect" } },
            { name = "has_active_optcloak", rval = "bool", args = { } },
            { name = "has_addiction", rval = "bool", args = { "add_type" } },
            { name = "has_alarm_clock", rval = "bool", args = { } },
            { name = "has_charges", rval = "bool", args = { "std::string", "int" } },
            { name = "has_child_flag", rval = "bool", args = { "std::string" } },
            { name = "has_conflicting_trait", rval = "bool", args = { "std::string" } },
            { name = "has_destination", rval = "bool", args = { } },
            { name = "has_enough_charges", rval = "bool", args = { "item", "bool" } },
            { name = "has_higher_trait", rval = "bool", args = { "std::string" } },
            { name = "has_identified", rval = "bool", args = { "std::string" } },
            { name = "has_item_with_flag", rval = "bool", args = { "std::string" } },
            { name = "has_lower_trait", rval = "bool", args = { "std::string" } },
            { name = "has_mabuff", rval = "bool", args = { "mabuff_id" } },
            { name = "has_martialart", rval = "bool", args = { "matype_id" } },
            { name = "has_miss_recovery_tec", rval = "bool", args = { } },
            { name = "has_mission_item", rval = "bool", args = { "int" } },
            { name = "has_morale", rval = "int", args = { "morale_type" } },
            { name = "has_morale_to_craft", rval = "bool", args = { } },
            { name = "has_morale_to_read", rval = "bool", args = { } },
            { name = "has_opposite_trait", rval = "bool", args = { "std::string" } },
            { name = "has_technique", rval = "bool", args = { "matec_id" } },
            { name = "has_two_arms", rval = "bool", args = { } },
            { name = "has_watch", rval = "bool", args = { } },
            { name = "heal", rval = nil, args = { "body_part", "int" } },
            { name = "heal", rval = nil, args = { "hp_part", "int" } },
            { name = "healall", rval = nil, args = { "int" } },
            { name = "hearing_ability", rval = "float", args = { } },
            { name = "hitall", rval = "int", args = { "int", "int", "Creature" } },
            { name = "hp_to_bp", static = true, rval = "body_part", args = { "hp_part" } },
            { name = "hurtall", rval = nil, args = { "int", "Creature" } },
            { name = "hurtall", rval = nil, args = { "int", "Creature", "bool" } },
            { name = "in_climate_control", rval = "bool", args = { } },
            { name = "install_bionics", rval = "bool", args = { "itype" } },
            { name = "install_bionics", rval = "bool", args = { "itype", "int" } },
            { name = "intimidation", rval = "int", args = { } },
            { name = "invalidate_crafting_inventory", rval = nil, args = { } },
            { name = "invlet_to_position", rval = "int", args = { "int" } },
            { name = "invoke_item", rval = "bool", args = { "item" } },
            { name = "invoke_item", rval = "bool", args = { "item", "std::string" } },
            { name = "invoke_item", rval = "bool", args = { "item", "std::string", "tripoint" } },
            { name = "invoke_item", rval = "bool", args = { "item", "tripoint" } },
            { name = "is_allergic", rval = "bool", args = { "item" } },
            { name = "is_armed", rval = "bool", args = { } },
            { name = "is_deaf", rval = "bool", args = { } },
            { name = "is_hibernating", rval = "bool", args = { } },
            { name = "is_invisible", rval = "bool", args = { } },
            { name = "is_quiet", rval = "bool", args = { } },
            { name = "is_snuggling", rval = "std::string", args = { } },
            { name = "is_throw_immune", rval = "bool", args = { } },
            { name = "is_wearing_power_armor", rval = "bool", args = { } },
            { name = "is_wearing_shoes", rval = "bool", args = { "std::string" } },
            { name = "is_wearing_shoes", rval = "bool", args = { } },
            { name = "item_handling_cost", rval = "int", args = { "item" } },
            { name = "item_handling_cost", rval = "int", args = { "item", "bool" } },
            { name = "item_handling_cost", rval = "int", args = { "item", "bool", "int" } },
            { name = "item_reload_cost", rval = "int", args = { "item", "item", "int" } },
            { name = "item_store_cost", rval = "int", args = { "item", "item" } },
            { name = "item_store_cost", rval = "int", args = { "item", "item", "bool" } },
            { name = "item_store_cost", rval = "int", args = { "item", "item", "bool", "int" } },
            { name = "item_wear_cost", rval = "int", args = { "item" } },
            { name = "knows_trap", rval = "bool", args = { "tripoint" } },
            { name = "leak_level", rval = "int", args = { "std::string" } },
            { name = "lifetime_stats", rval = "stats&", args = { } },
            { name = "load_info", rval = nil, args = { "std::string" } },
            { name = "load_template", rval = "bool", args = { "std::string" } },
            { name = "long_craft", rval = nil, args = { } },
            { name = "ma_onattack_effects", rval = nil, args = { } },
            { name = "ma_onblock_effects", rval = nil, args = { } },
            { name = "ma_ondodge_effects", rval = nil, args = { } },
            { name = "ma_ongethit_effects", rval = nil, args = { } },
            { name = "ma_onhit_effects", rval = nil, args = { } },
            { name = "ma_onmove_effects", rval = nil, args = { } },
            { name = "ma_static_effects", rval = nil, args = { } },
            { name = "mabuff_armor_bonus", rval = "int", args = { "damage_type" } },
            { name = "mabuff_block_bonus", rval = "int", args = { } },
            { name = "mabuff_damage_bonus", rval = "int", args = { "damage_type" } },
            { name = "mabuff_damage_mult", rval = "float", args = { "damage_type" } },
            { name = "mabuff_dodge_bonus", rval = "int", args = { } },
            { name = "mabuff_speed_bonus", rval = "int", args = { } },
            { name = "mabuff_tohit_bonus", rval = "int", args = { } },
            { name = "make_all_craft", rval = nil, args = { "std::string", "int" } },
            { name = "make_craft", rval = nil, args = { "std::string", "int" } },
            { name = "make_craft_with_command", rval = nil, args = { "std::string", "int" } },
            { name = "make_craft_with_command", rval = nil, args = { "std::string", "int", "bool" } },
            { name = "making_would_work", rval = "bool", args = { "std::string", "int" } },
            { name = "melee_value", rval = "float", args = { "item" } },
            { name = "mend", rval = nil, args = { "int" } },
            { name = "metabolic_rate", rval = "float", args = { } },
            { name = "metabolic_rate_base", rval = "float", args = { } },
            { name = "mod_painkiller", rval = nil, args = { "int" } },
            { name = "mutate", rval = nil, args = { } },
            { name = "mutate_category", rval = nil, args = { "std::string" } },
            { name = "mutate_towards", rval = "bool", args = { "std::string" } },
            { name = "mutation_ok", rval = "bool", args = { "std::string", "bool", "bool" } },
            { name = "natural_attack_restricted_on", rval = "bool", args = { "body_part" } },
            { name = "num_bionics", rval = "int", args = { } },
            { name = "nutrition_for", rval = "int", args = { "itype" } },
            { name = "on_hurt", rval = nil, args = { "Creature" } },
            { name = "on_hurt", rval = nil, args = { "Creature", "bool" } },
            { name = "overmap_los", rval = "bool", args = { "tripoint", "int" } },
            { name = "overmap_sight_range", rval = "int", args = { "int" } },
            { name = "pause", rval = nil, args = { } },
            { name = "perform_special_attacks", rval = nil, args = { "Creature" } },
            { name = "pick_style", rval = "bool", args = { } },
            { name = "pick_technique", rval = "matec_id", args = { "Creature", "bool", "bool", "bool" } },
            { name = "pick_usb", rval = "item&", args = { } },
            { name = "place_corpse", rval = nil, args = { } },
            { name = "power_bionics", rval = nil, args = { } },
            { name = "power_mutations", rval = nil, args = { } },
            { name = "practice", rval = nil, args = { "skill_id", "int" } },
            { name = "practice", rval = nil, args = { "skill_id", "int", "int" } },
            { name = "print_health", rval = nil, args = { } },
            { name = "process_active_items", rval = nil, args = { } },
            { name = "process_bionic", rval = nil, args = { "int" } },
            { name = "purifiable", rval = "bool", args = { "std::string" } },
            { name = "reach_attack", rval = nil, args = { "tripoint" } },
            { name = "read", rval = "bool", args = { "int" } },
            { name = "read", rval = "bool", args = { "int", "bool" } },
            { name = "read_speed", rval = "int", args = { "bool" } },
            { name = "read_speed", rval = "int", args = { } },
            { name = "recalc_speed_bonus", rval = nil, args = { } },
            { name = "recoil_total", rval = "float", args = { } },
            { name = "recoil_vehicle", rval = "float", args = { } },
            { name = "recraft", rval = nil, args = { } },
            { name = "reduce_charges", rval = "item", args = { "int", "int" } },
            { name = "reduce_charges", rval = "item", args = { "item", "int" } },
            { name = "regen", rval = nil, args = { "int" } },
            { name = "rem_addiction", rval = nil, args = { "add_type" } },
            { name = "rem_morale", rval = nil, args = { "morale_type" } },
            { name = "rem_morale", rval = nil, args = { "morale_type", "itype" } },
            { name = "remove_bionic", rval = nil, args = { "std::string" } },
            { name = "remove_child_flag", rval = nil, args = { "std::string" } },
            { name = "remove_mutation", rval = nil, args = { "std::string" } },
            { name = "remove_random_bionic", rval = "bool", args = { } },
            { name = "roll_stuck_penalty", rval = "int", args = { "bool", "ma_technique" } },
            { name = "rooted", rval = nil, args = { } },
            { name = "rooted_message", rval = nil, args = { } },
            { name = "run_cost", rval = "int", args = { "int" } },
            { name = "run_cost", rval = "int", args = { "int", "bool" } },
            { name = "rust_rate", rval = "int", args = { "bool" } },
            { name = "rust_rate", rval = "int", args = { } },
            { name = "save_info", rval = "std::string", args = { } },
            { name = "scored_crit", rval = "bool", args = { "int" } },
            { name = "scored_crit", rval = "bool", args = { } },
            { name = "search_surroundings", rval = nil, args = { } },
            { name = "sees_with_infrared", rval = "bool", args = { "Creature" } },
            { name = "serialize", rval = "std::string", args = { } },
            { name = "setID", rval = nil, args = { "int" } },
            { name = "set_cat_level_rec", rval = nil, args = { "std::string" } },
            { name = "set_destination", rval = nil, args = { "std::vector<tripoint>" } },
            { name = "set_highest_cat_level", rval = nil, args = { } },
            { name = "set_painkiller", rval = nil, args = { "int" } },
            { name = "set_underwater", rval = nil, args = { "bool" } },
            { name = "setx", rval = nil, args = { "int" } },
            { name = "sety", rval = nil, args = { "int" } },
            { name = "setz", rval = nil, args = { "int" } },
            { name = "shift_destination", rval = nil, args = { "int", "int" } },
            { name = "shoe_type_count", rval = "int", args = { "std::string" } },
            { name = "shout", rval = nil, args = { "std::string" } },
            { name = "shout", rval = nil, args = { } },
            { name = "sight_impaired", rval = "bool", args = { } },
            { name = "siphon", rval = nil, args = { "vehicle", "std::string" } },
            { name = "sleep_hp_regen", rval = nil, args = { "int" } },
            { name = "sleep_spot", rval = "int", args = { "tripoint" } },
            { name = "sort_armor", rval = nil, args = { } },
            { name = "spores", rval = nil, args = { } },
            { name = "stomach_capacity", rval = "int", args = { } },
            { name = "store", rval = nil, args = { "item", "item" } },
            { name = "store", rval = nil, args = { "item", "item", "int" } },
            { name = "store", rval = nil, args = { "item", "item", "int", "bool" } },
            { name = "studied_all_recipes", rval = "bool", args = { "itype" } },
            { name = "suffer", rval = nil, args = { } },
            { name = "swim_speed", rval = "int", args = { } },
            { name = "takeoff", rval = "bool", args = { "int" } },
            { name = "takeoff", rval = "bool", args = { "item" } },
            { name = "takeoff", rval = "bool", args = { "item", "std::list<item>" } },
            { name = "talk_skill", rval = "int", args = { } },
            { name = "temp_equalizer", rval = nil, args = { "body_part", "body_part" } },
            { name = "throw_dex_mod", rval = "int", args = { "bool" } },
            { name = "throw_dex_mod", rval = "int", args = { } },
            { name = "time_to_read", rval = "int", args = { "item", "player" } },
            { name = "time_to_read", rval = "int", args = { "item", "player", "player" } },
            { name = "toggle_move_mode", rval = nil, args = { } },
            { name = "try_to_sleep", rval = nil, args = { } },
            { name = "unarmed_attack", rval = "bool", args = { } },
            { name = "unarmed_value", rval = "float", args = { } },
            { name = "unimpaired_range", rval = "int", args = { } },
            { name = "uninstall_bionic", rval = "bool", args = { "std::string" } },
            { name = "uninstall_bionic", rval = "bool", args = { "std::string", "int" } },
            { name = "update_body", rval = nil, args = { "int", "int" } },
            { name = "update_body", rval = nil, args = { } },
            { name = "update_body_wetness", rval = nil, args = { "w_point" } },
            { name = "update_bodytemp", rval = nil, args = { } },
            { name = "update_mental_focus", rval = nil, args = { } },
            { name = "update_morale", rval = nil, args = { } },
            { name = "update_needs", rval = nil, args = { "int" } },
            { name = "update_stamina", rval = nil, args = { "int" } },
            { name = "update_vitamins", rval = nil, args = { "vitamin_id" } },
            { name = "use", rval = nil, args = { "int" } },
            { name = "use_amount", rval = "std::list<item>", args = { "std::string", "int" } },
            { name = "use_charges", rval = "std::list<item>", args = { "std::string", "int" } },
            { name = "use_charges_if_avail", rval = "bool", args = { "std::string", "int" } },
            { name = "use_wielded", rval = nil, args = { } },
            { name = "visibility", rval = "int", args = { "bool" } },
            { name = "visibility", rval = "int", args = { "bool", "int" } },
            { name = "visibility", rval = "int", args = { } },
            { name = "vitamin_get", rval = "int", args = { "vitamin_id" } },
            { name = "vitamin_mod", rval = "int", args = { "vitamin_id", "int" } },
            { name = "vitamin_mod", rval = "int", args = { "vitamin_id", "int", "bool" } },
            { name = "vitamin_rate", rval = "int", args = { "vitamin_id" } },
            { name = "vitamin_set", rval = "bool", args = { "vitamin_id", "int" } },
            { name = "vomit", rval = nil, args = { } },
            { name = "vomit_mod", rval = "float", args = { } },
            { name = "wake_up", rval = nil, args = { } },
            { name = "warmth", rval = "int", args = { "body_part" } },
            { name = "weapname", rval = "std::string", args = { } },
            { name = "weapon_value", rval = "float", args = { "item" } },
            { name = "weapon_value", rval = "float", args = { "item", "int" } },
            { name = "wear", rval = "bool", args = { "int" } },
            { name = "wear", rval = "bool", args = { "int", "bool" } },
            { name = "wear_item", rval = "bool", args = { "item" } },
            { name = "wear_item", rval = "bool", args = { "item", "bool" } },
            { name = "wearing_something_on", rval = "bool", args = { "body_part" } },
            { name = "wield", rval = "bool", args = { "item" } },
            { name = "wield_contents", rval = "bool", args = { "item" } },
            { name = "wield_contents", rval = "bool", args = { "item", "int" } },
            { name = "wield_contents", rval = "bool", args = { "item", "int", "int" } },
            { name = "wield_contents", rval = "bool", args = { "item", "int", "int", "bool" } },
        }
    },
    item = {
        new = {
            { "item" },
            { "itype" },
            { "itype", "int" },
            { "itype", "int", "int" },
            { "std::string" },
            { "std::string", "int" },
            { "std::string", "int", "int" },
            { },
        },
        by_value_and_reference = true,
        attributes = {
            active = { type = "bool", writable = true },
            bday = { type = "int", writable = true },
            burnt = { type = "int", writable = true },
            charges = { type = "int", writable = true },
            components = { type = "std::vector<item>", writable = true },
            contents = { type = "std::list<item>", writable = true },
            faults = { type = "std::set<fault_id>", writable = true },
            frequency = { type = "int", writable = true },
            fridge = { type = "int", writable = true },
            invlet = { type = "int", writable = true },
            irridation = { type = "int", writable = true },
            item_counter = { type = "int", writable = true },
            item_tags = { type = "std::set<std::string>", writable = true },
            mission_id = { type = "int", writable = true },
            note = { type = "int", writable = true },
            player_id = { type = "int", writable = true },
            poison = { type = "int", writable = true },
            type = { type = "itype", writable = true },
        },
        functions = {
            { name = "acid_resist", rval = "int", args = { "bool" } },
            { name = "acid_resist", rval = "int", args = { } },
            { name = "activate", rval = "item&", args = { } },
            { name = "add_rain_to_container", rval = nil, args = { "bool" } },
            { name = "add_rain_to_container", rval = nil, args = { "bool", "int" } },
            { name = "add_technique", rval = nil, args = { "matec_id" } },
            { name = "allow_crafting_component", rval = "bool", args = { } },
            { name = "already_used_by_player", rval = "bool", args = { "player" } },
            { name = "ammo_capacity", rval = "int", args = { } },
            { name = "ammo_consume", rval = "int", args = { "int", "tripoint" } },
            { name = "ammo_current", rval = "std::string", args = { } },
            { name = "ammo_data", rval = "itype&", args = { } },
            { name = "ammo_default", rval = "std::string", args = { "bool" } },
            { name = "ammo_default", rval = "std::string", args = { } },
            { name = "ammo_effects", rval = "std::set<std::string>", args = { "bool" } },
            { name = "ammo_effects", rval = "std::set<std::string>", args = { } },
            { name = "ammo_remaining", rval = "int", args = { } },
            { name = "ammo_required", rval = "int", args = { } },
            { name = "ammo_set", rval = "item&", args = { "std::string" } },
            { name = "ammo_set", rval = "item&", args = { "std::string", "int" } },
            { name = "ammo_sufficient", rval = "bool", args = { "int" } },
            { name = "ammo_sufficient", rval = "bool", args = { } },
            { name = "ammo_unset", rval = "item&", args = { } },
            { name = "amount_of", rval = "int", args = { "std::string" } },
            { name = "amount_of", rval = "int", args = { "std::string", "bool" } },
            { name = "amount_of", rval = "int", args = { "std::string", "bool", "int" } },
            { name = "attack_time", rval = "int", args = { } },
            { name = "base_volume", rval = "int", args = { } },
            { name = "bash_resist", rval = "int", args = { "bool" } },
            { name = "bash_resist", rval = "int", args = { } },
            { name = "brewing_results", rval = "std::vector<std::string>", args = { } },
            { name = "brewing_time", rval = "int", args = { } },
            { name = "calc_rot", rval = nil, args = { "tripoint" } },
            { name = "can_contain", rval = "bool", args = { "item" } },
            { name = "can_contain", rval = "bool", args = { "itype" } },
            { name = "can_holster", rval = "bool", args = { "item" } },
            { name = "can_holster", rval = "bool", args = { "item", "bool" } },
            { name = "can_revive", rval = "bool", args = { } },
            { name = "casings_count", rval = "int", args = { } },
            { name = "charges_of", rval = "int", args = { "std::string" } },
            { name = "charges_of", rval = "int", args = { "std::string", "int" } },
            { name = "chip_resistance", rval = "int", args = { "bool" } },
            { name = "chip_resistance", rval = "int", args = { } },
            { name = "clear_vars", rval = nil, args = { } },
            { name = "color", rval = "int", args = { } },
            { name = "color_in_inventory", rval = "int", args = { } },
            { name = "components_to_string", rval = "std::string", args = { } },
            { name = "conductive", rval = "bool", args = { } },
            { name = "convert", rval = "item&", args = { "std::string" } },
            { name = "count_by_charges", rval = "bool", args = { } },
            { name = "count_by_charges", static = true, rval = "bool", args = { "std::string" } },
            { name = "covers", rval = "bool", args = { "body_part" } },
            { name = "craft_has_charges", rval = "bool", args = { } },
            { name = "cut_resist", rval = "int", args = { "bool" } },
            { name = "cut_resist", rval = "int", args = { } },
            { name = "damage", rval = "int", args = { } },
            { name = "damage_bash", rval = "int", args = { } },
            { name = "damage_by_type", rval = "int", args = { "damage_type" } },
            { name = "damage_color", rval = "int", args = { } },
            { name = "damage_cut", rval = "int", args = { } },
            { name = "damage_resist", rval = "int", args = { "damage_type" } },
            { name = "damage_resist", rval = "int", args = { "damage_type", "bool" } },
            { name = "damage_symbol", rval = "std::string", args = { } },
            { name = "deactivate", rval = "item&", args = { "Character" } },
            { name = "deactivate", rval = "item&", args = { "Character", "bool" } },
            { name = "deactivate", rval = "item&", args = { } },
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "destroyed_at_zero_charges", rval = "bool", args = { } },
            { name = "detonate", rval = "bool", args = { "tripoint", "std::vector<item>" } },
            { name = "display_name", rval = "std::string", args = { "int" } },
            { name = "display_name", rval = "std::string", args = { } },
            { name = "engine_displacement", rval = "int", args = { } },
            { name = "erase_var", rval = nil, args = { "std::string" } },
            { name = "faults_potential", rval = "std::set<fault_id>", args = { } },
            { name = "fill_with", rval = nil, args = { "item" } },
            { name = "fill_with", rval = nil, args = { "item", "int" } },
            { name = "find_parent", rval = "item&", args = { "item" } },
            { name = "find_type", static = true, rval = "itype&", args = { "std::string" } },
            { name = "fire_resist", rval = "int", args = { "bool" } },
            { name = "fire_resist", rval = "int", args = { } },
            { name = "flammable", rval = "bool", args = { "int" } },
            { name = "flammable", rval = "bool", args = { } },
            { name = "get_base_material", rval = "material_type&", args = { } },
            { name = "get_cable_target", rval = "tripoint", args = { } },
            { name = "get_chapters", rval = "int", args = { } },
            { name = "get_container_capacity", rval = "int", args = { } },
            { name = "get_coverage", rval = "int", args = { } },
            { name = "get_encumber", rval = "int", args = { } },
            { name = "get_env_resist", rval = "int", args = { } },
            { name = "get_free_mod_locations", rval = "int", args = { "std::string" } },
            { name = "get_gun_ups_drain", rval = "int", args = { } },
            { name = "get_layer", rval = "int", args = { } },
            { name = "get_mtype", rval = "mtype&", args = { } },
            { name = "get_plant_epoch", rval = "int", args = { } },
            { name = "get_plant_name", rval = "std::string", args = { } },
            { name = "get_property_long", rval = "int", args = { "std::string" } },
            { name = "get_property_long", rval = "int", args = { "std::string", "int" } },
            { name = "get_property_string", rval = "std::string", args = { "std::string" } },
            { name = "get_property_string", rval = "std::string", args = { "std::string", "std::string" } },
            { name = "get_quality", rval = "int", args = { "quality_id" } },
            { name = "get_random_material", rval = "material_type&", args = { } },
            { name = "get_relative_rot", rval = "float", args = { } },
            { name = "get_remaining_capacity_for_liquid", rval = "int", args = { "item" } },
            { name = "get_remaining_capacity_for_liquid", rval = "int", args = { "item", "Character" } },
            { name = "get_remaining_capacity_for_liquid", rval = "int", args = { "item", "bool" } },
            { name = "get_remaining_chapters", rval = "int", args = { "player" } },
            { name = "get_rot", rval = "int", args = { } },
            { name = "get_side", rval = "int", args = { } },
            { name = "get_storage", rval = "int", args = { } },
            { name = "get_techniques", rval = "std::set<matec_id>", args = { } },
            { name = "get_thickness", rval = "int", args = { } },
            { name = "get_usable_item", rval = "item&", args = { "std::string" } },
            { name = "get_var", rval = "float", args = { "std::string", "float" } },
            { name = "get_var", rval = "std::string", args = { "std::string" } },
            { name = "get_var", rval = "std::string", args = { "std::string", "std::string" } },
            { name = "get_warmth", rval = "int", args = { } },
            { name = "getlight_emit", rval = "int", args = { } },
            { name = "goes_bad", rval = "bool", args = { } },
            { name = "gun_cycle_mode", rval = nil, args = { } },
            { name = "gun_damage", rval = "int", args = { "bool" } },
            { name = "gun_damage", rval = "int", args = { } },
            { name = "gun_dispersion", rval = "int", args = { "bool" } },
            { name = "gun_dispersion", rval = "int", args = { } },
            { name = "gun_get_mode_id", rval = "std::string", args = { } },
            { name = "gun_pierce", rval = "int", args = { "bool" } },
            { name = "gun_pierce", rval = "int", args = { } },
            { name = "gun_range", rval = "int", args = { "bool" } },
            { name = "gun_range", rval = "int", args = { "player" } },
            { name = "gun_range", rval = "int", args = { } },
            { name = "gun_recoil", rval = "int", args = { "bool" } },
            { name = "gun_recoil", rval = "int", args = { } },
            { name = "gun_set_mode", rval = "bool", args = { "std::string" } },
            { name = "gun_skill", rval = "skill_id", args = { } },
            { name = "gun_type", rval = "std::string", args = { } },
            { name = "gunmod_compatible", rval = "bool", args = { "item" } },
            { name = "gunmod_compatible", rval = "bool", args = { "item", "bool" } },
            { name = "gunmod_compatible", rval = "bool", args = { "item", "bool", "bool" } },
            { name = "gunmod_find", rval = "item&", args = { "std::string" } },
            { name = "has_amount", rval = "bool", args = { "std::string", "int" } },
            { name = "has_amount", rval = "bool", args = { "std::string", "int", "bool" } },
            { name = "has_any_flag", rval = "bool", args = { "std::vector<std::string>" } },
            { name = "has_flag", rval = "bool", args = { "std::string" } },
            { name = "has_infinite_charges", rval = "bool", args = { } },
            { name = "has_item", rval = "bool", args = { "item" } },
            { name = "has_label", rval = "bool", args = { } },
            { name = "has_property", rval = "bool", args = { "std::string" } },
            { name = "has_quality", rval = "bool", args = { "quality_id" } },
            { name = "has_quality", rval = "bool", args = { "quality_id", "int" } },
            { name = "has_quality", rval = "bool", args = { "quality_id", "int", "int" } },
            { name = "has_rotten_away", rval = "bool", args = { } },
            { name = "has_technique", rval = "bool", args = { "matec_id" } },
            { name = "has_var", rval = "bool", args = { "std::string" } },
            { name = "in_container", rval = "item", args = { "std::string" } },
            { name = "in_its_container", rval = "item", args = { } },
            { name = "inc_damage", rval = "bool", args = { "damage_type" } },
            { name = "inc_damage", rval = "bool", args = { } },
            { name = "info", rval = "std::string", args = { "bool" } },
            { name = "info", rval = "std::string", args = { } },
            { name = "is_ammo", rval = "bool", args = { } },
            { name = "is_ammo_belt", rval = "bool", args = { } },
            { name = "is_ammo_container", rval = "bool", args = { } },
            { name = "is_armor", rval = "bool", args = { } },
            { name = "is_artifact", rval = "bool", args = { } },
            { name = "is_bandolier", rval = "bool", args = { } },
            { name = "is_bashing_weapon", rval = "bool", args = { } },
            { name = "is_bionic", rval = "bool", args = { } },
            { name = "is_book", rval = "bool", args = { } },
            { name = "is_brewable", rval = "bool", args = { } },
            { name = "is_bucket", rval = "bool", args = { } },
            { name = "is_bucket_nonempty", rval = "bool", args = { } },
            { name = "is_container", rval = "bool", args = { } },
            { name = "is_container_empty", rval = "bool", args = { } },
            { name = "is_container_full", rval = "bool", args = { "bool" } },
            { name = "is_container_full", rval = "bool", args = { } },
            { name = "is_corpse", rval = "bool", args = { } },
            { name = "is_cutting_weapon", rval = "bool", args = { } },
            { name = "is_dangerous", rval = "bool", args = { } },
            { name = "is_disassemblable", rval = "bool", args = { } },
            { name = "is_emissive", rval = "bool", args = { } },
            { name = "is_engine", rval = "bool", args = { } },
            { name = "is_faulty", rval = "bool", args = { } },
            { name = "is_filthy", rval = "bool", args = { } },
            { name = "is_firearm", rval = "bool", args = { } },
            { name = "is_food", rval = "bool", args = { "player" } },
            { name = "is_food", rval = "bool", args = { } },
            { name = "is_food_container", rval = "bool", args = { "player" } },
            { name = "is_food_container", rval = "bool", args = { } },
            { name = "is_fresh", rval = "bool", args = { } },
            { name = "is_going_bad", rval = "bool", args = { } },
            { name = "is_gun", rval = "bool", args = { } },
            { name = "is_gunmod", rval = "bool", args = { } },
            { name = "is_magazine", rval = "bool", args = { } },
            { name = "is_medication", rval = "bool", args = { } },
            { name = "is_medication_container", rval = "bool", args = { } },
            { name = "is_non_resealable_container", rval = "bool", args = { } },
            { name = "is_null", rval = "bool", args = { } },
            { name = "is_power_armor", rval = "bool", args = { } },
            { name = "is_reloadable", rval = "bool", args = { } },
            { name = "is_reloadable_with", rval = "bool", args = { "std::string" } },
            { name = "is_salvageable", rval = "bool", args = { } },
            { name = "is_seed", rval = "bool", args = { } },
            { name = "is_sided", rval = "bool", args = { } },
            { name = "is_silent", rval = "bool", args = { } },
            { name = "is_soft", rval = "bool", args = { } },
            { name = "is_tainted", rval = "bool", args = { } },
            { name = "is_tool", rval = "bool", args = { } },
            { name = "is_tool_reversible", rval = "bool", args = { } },
            { name = "is_two_handed", rval = "bool", args = { "player" } },
            { name = "is_var_veh_part", rval = "bool", args = { } },
            { name = "is_watertight_container", rval = "bool", args = { } },
            { name = "is_weap", rval = "bool", args = { } },
            { name = "is_wheel", rval = "bool", args = { } },
            { name = "is_worn_only_with", rval = "bool", args = { "item" } },
            { name = "label", rval = "std::string", args = { "int" } },
            { name = "label", rval = "std::string", args = { } },
            { name = "lift_strength", rval = "int", args = { } },
            { name = "liquid_charges", rval = "int", args = { "int" } },
            { name = "liquid_charges_per_volume", rval = "int", args = { "int" } },
            { name = "liquid_units", rval = "int", args = { "int" } },
            { name = "load_info", rval = nil, args = { "std::string" } },
            { name = "made_of", rval = "bool", args = { "material_id" } },
            { name = "made_of", rval = "bool", args = { "phase_id" } },
            { name = "made_of", rval = "std::vector<material_id>", args = { } },
            { name = "made_of_any", rval = "bool", args = { "std::set<material_id>" } },
            { name = "magazine_compatible", rval = "std::set<std::string>", args = { "bool" } },
            { name = "magazine_compatible", rval = "std::set<std::string>", args = { } },
            { name = "magazine_convert", rval = "std::vector<item>", args = { } },
            { name = "magazine_current", rval = "item&", args = { } },
            { name = "magazine_default", rval = "std::string", args = { "bool" } },
            { name = "magazine_default", rval = "std::string", args = { } },
            { name = "magazine_integral", rval = "bool", args = { } },
            { name = "make_corpse", static = true, rval = "item", args = { "mtype_id" } },
            { name = "make_corpse", static = true, rval = "item", args = { "mtype_id", "int" } },
            { name = "make_corpse", static = true, rval = "item", args = { "mtype_id", "int", "std::string" } },
            { name = "make_corpse", static = true, rval = "item", args = { } },
            { name = "mark_as_used_by_player", rval = nil, args = { "player" } },
            { name = "mark_chapter_as_read", rval = nil, args = { "player" } },
            { name = "max_damage", rval = "int", args = { } },
            { name = "max_quality", rval = "int", args = { "quality_id" } },
            { name = "merge_charges", rval = "bool", args = { "item" } },
            { name = "min_damage", rval = "int", args = { } },
            { name = "mod_charges", rval = nil, args = { "int" } },
            { name = "mod_damage", rval = "bool", args = { "float" } },
            { name = "mod_damage", rval = "bool", args = { "float", "damage_type" } },
            { name = "needs_processing", rval = "bool", args = { } },
            { name = "nname", static = true, rval = "std::string", args = { "std::string" } },
            { name = "nname", static = true, rval = "std::string", args = { "std::string", "int" } },
            { name = "on_contents_changed", rval = nil, args = { } },
            { name = "on_damage", rval = nil, args = { "float", "damage_type" } },
            { name = "on_pickup", rval = nil, args = { "Character" } },
            { name = "on_takeoff", rval = nil, args = { "Character" } },
            { name = "on_wear", rval = nil, args = { "Character" } },
            { name = "on_wield", rval = nil, args = { "player" } },
            { name = "on_wield", rval = nil, args = { "player", "int" } },
            { name = "only_made_of", rval = "bool", args = { "std::set<material_id>" } },
            { name = "precise_unit_volume", rval = "int", args = { } },
            { name = "price", rval = "int", args = { "bool" } },
            { name = "process", rval = "bool", args = { "player", "tripoint", "bool" } },
            { name = "process_artifact", rval = nil, args = { "player", "tripoint" } },
            { name = "processing_speed", rval = "int", args = { } },
            { name = "put_in", rval = nil, args = { "item" } },
            { name = "reach_range", rval = "int", args = { "player" } },
            { name = "ready_to_revive", rval = "bool", args = { "tripoint" } },
            { name = "remove_item", rval = "item", args = { "item" } },
            { name = "reset_cable", rval = nil, args = { "player" } },
            { name = "rotten", rval = "bool", args = { } },
            { name = "serialize", rval = "std::string", args = { } },
            { name = "set_countdown", rval = nil, args = { "int" } },
            { name = "set_damage", rval = "item&", args = { "float" } },
            { name = "set_mtype", rval = nil, args = { "mtype" } },
            { name = "set_relative_rot", rval = nil, args = { "float" } },
            { name = "set_snippet", rval = nil, args = { "std::string" } },
            { name = "set_var", rval = nil, args = { "std::string", "float" } },
            { name = "set_var", rval = nil, args = { "std::string", "int" } },
            { name = "set_var", rval = nil, args = { "std::string", "int" } },
            { name = "set_var", rval = nil, args = { "std::string", "std::string" } },
            { name = "sight_dispersion", rval = "int", args = { } },
            { name = "spill_contents", rval = "bool", args = { "Character" } },
            { name = "spill_contents", rval = "bool", args = { "tripoint" } },
            { name = "split", rval = "item", args = { "int" } },
            { name = "stab_resist", rval = "int", args = { "bool" } },
            { name = "stab_resist", rval = "int", args = { } },
            { name = "stacks_with", rval = "bool", args = { "item" } },
            { name = "symbol", rval = "std::string", args = { } },
            { name = "tname", rval = "std::string", args = { "int" } },
            { name = "tname", rval = "std::string", args = { "int", "bool" } },
            { name = "tname", rval = "std::string", args = { } },
            { name = "typeId", rval = "std::string", args = { } },
            { name = "type_is_defined", static = true, rval = "bool", args = { "std::string" } },
            { name = "type_name", rval = "std::string", args = { "int" } },
            { name = "type_name", rval = "std::string", args = { } },
            { name = "units_remaining", rval = "int", args = { "Character" } },
            { name = "units_remaining", rval = "int", args = { "Character", "int" } },
            { name = "units_sufficient", rval = "bool", args = { "Character" } },
            { name = "units_sufficient", rval = "bool", args = { "Character", "int" } },
            { name = "unset_flags", rval = nil, args = { } },
            { name = "volume", rval = "int", args = { "bool" } },
            { name = "volume", rval = "int", args = { } },
            { name = "weap_skill", rval = "skill_id", args = { } },
            { name = "weight", rval = "int", args = { "bool" } },
            { name = "weight", rval = "int", args = { } },
            { name = "wheel_area", rval = "int", args = { } },
            { name = "will_explode_in_fire", rval = "bool", args = { } },
        }
    },
    point = {
        new = {
            { "int", "int" },
            { "point" },
            { },
        },
        by_value = true,
        attributes = {
            x = { type = "int", writable = true },
            y = { type = "int", writable = true },
        },
        functions = {
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "serialize", rval = "std::string", args = { } },
        }
    },
    tripoint = {
        new = {
            { "int", "int", "int" },
            { "point", "int" },
            { "tripoint" },
            { },
        },
        by_value = true,
        attributes = {
            x = { type = "int", writable = true },
            y = { type = "int", writable = true },
            z = { type = "int", writable = true },
        },
        functions = {
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "serialize", rval = "std::string", args = { } },
        }
    },
    uimenu = {
        attributes = {
            border = { type = "bool", writable = true },
            border_color = { type = "int", writable = true },
            centered_scroll = { type = "bool", writable = true },
            desc_enabled = { type = "bool", writable = true },
            desc_lines = { type = "int", writable = true },
            disabled_color = { type = "int", writable = true },
            filter = { type = "std::string", writable = true },
            filtering = { type = "bool", writable = true },
            filtering_nocase = { type = "bool", writable = true },
            fselected = { type = "int", writable = true },
            hilight_color = { type = "int", writable = true },
            hilight_disabled = { type = "bool", writable = true },
            hilight_full = { type = "bool", writable = true },
            hotkey_color = { type = "int", writable = true },
            keypress = { type = "int", writable = true },
            max_desc_len = { type = "int", writable = true },
            max_entry_len = { type = "int", writable = true },
            pad_left = { type = "int", writable = true },
            pad_right = { type = "int", writable = true },
            ret = { type = "int", writable = true },
            return_invalid = { type = "bool", writable = true },
            scrollbar_auto = { type = "bool", writable = true },
            scrollbar_nopage_color = { type = "int", writable = true },
            scrollbar_page_color = { type = "int", writable = true },
            scrollbar_side = { type = "int", writable = true },
            selected = { type = "int", writable = true },
            shift_retval = { type = "int", writable = true },
            text = { type = "std::string", writable = true },
            text_color = { type = "int", writable = true },
            textalign = { type = "int", writable = true },
            textformatted = { type = "std::vector<std::string>", writable = true },
            textwidth = { type = "int", writable = true },
            title = { type = "std::string", writable = true },
            title_color = { type = "int", writable = true },
            vmax = { type = "int", writable = true },
            vshift = { type = "int", writable = true },
            w_height = { type = "int", writable = true },
            w_width = { type = "int", writable = true },
            w_x = { type = "int", writable = true },
            w_y = { type = "int", writable = true },
        },
        functions = {
            { name = "addentry", rval = nil, args = { "int", "bool", "int", "std::string" } },
            { name = "addentry", rval = nil, args = { "std::string" } },
            { name = "addentry_desc", rval = nil, args = { "int", "bool", "int", "std::string", "std::string" } },
            { name = "addentry_desc", rval = nil, args = { "std::string", "std::string" } },
            { name = "apply_scrollbar", rval = nil, args = { } },
            { name = "filterlist", rval = nil, args = { } },
            { name = "init", rval = nil, args = { } },
            { name = "inputfilter", rval = "std::string", args = { } },
            { name = "query", rval = nil, args = { "bool" } },
            { name = "query", rval = nil, args = { } },
            { name = "redraw", rval = nil, args = { "bool" } },
            { name = "redraw", rval = nil, args = { } },
            { name = "refresh", rval = nil, args = { "bool" } },
            { name = "refresh", rval = nil, args = { } },
            { name = "reset", rval = nil, args = { } },
            { name = "scrollby", rval = "bool", args = { "int" } },
            { name = "scrollby", rval = "bool", args = { "int", "int" } },
            { name = "scrollby", rval = "bool", args = { } },
            { name = "settext", rval = nil, args = { "std::string" } },
            { name = "setup", rval = nil, args = { } },
            { name = "show", rval = nil, args = { } },
        }
    },
    field_entry = {
        functions = {
            { name = "decays_on_actualize", rval = "bool", args = { } },
            { name = "getFieldAge", rval = "int", args = { } },
            { name = "getFieldDensity", rval = "int", args = { } },
            { name = "getFieldType", rval = "field_id", args = { } },
            { name = "isAlive", rval = "bool", args = { } },
            { name = "is_dangerous", rval = "bool", args = { } },
            { name = "mod_age", rval = "int", args = { "int" } },
            { name = "move_cost", rval = "int", args = { } },
            { name = "name", rval = "std::string", args = { } },
            { name = "setFieldAge", rval = "int", args = { "int" } },
            { name = "setFieldDensity", rval = "int", args = { "int" } },
            { name = "setFieldType", rval = "field_id", args = { "field_id" } },
        }
    },
    field = {
        functions = {
            { name = "addField", rval = "bool", args = { "field_id" } },
            { name = "addField", rval = "bool", args = { "field_id", "int" } },
            { name = "addField", rval = "bool", args = { "field_id", "int", "int" } },
            { name = "fieldCount", rval = "int", args = { } },
            { name = "fieldSymbol", rval = "field_id", args = { } },
            { name = "findField", rval = "field_entry&", args = { "field_id" } },
            { name = "findFieldc", rval = "field_entry&", args = { "field_id" } },
            { name = "move_cost", rval = "int", args = { } },
            { name = "removeField", rval = "bool", args = { "field_id" } },
        }
    },
    map = {
        functions = {
            { name = "accessible_furniture", rval = "bool", args = { "tripoint", "tripoint", "int" } },
            { name = "accessible_items", rval = "bool", args = { "tripoint", "tripoint", "int" } },
            { name = "add_camp", rval = nil, args = { "tripoint", "std::string" } },
            { name = "add_corpse", rval = nil, args = { "tripoint" } },
            { name = "add_field", rval = "bool", args = { "tripoint", "field_id", "int" } },
            { name = "add_field", rval = "bool", args = { "tripoint", "field_id", "int", "int" } },
            { name = "add_item", rval = "item&", args = { "tripoint", "item" } },
            { name = "add_item", rval = nil, args = { "int", "int", "item" } },
            { name = "add_item_at", rval = "item&", args = { "tripoint", "std::list<item>::iterator", "item" } },
            { name = "add_item_or_charges", rval = "bool", args = { "int", "int", "item" } },
            { name = "add_item_or_charges", rval = "bool", args = { "int", "int", "item", "int" } },
            { name = "add_item_or_charges", rval = "item&", args = { "tripoint", "item" } },
            { name = "add_item_or_charges", rval = "item&", args = { "tripoint", "item", "int" } },
            { name = "add_spawn", rval = nil, args = { "mtype_id", "int", "int", "int" } },
            { name = "add_spawn", rval = nil, args = { "mtype_id", "int", "int", "int", "bool" } },
            { name = "add_spawn", rval = nil, args = { "mtype_id", "int", "int", "int", "bool", "int" } },
            { name = "add_spawn", rval = nil, args = { "mtype_id", "int", "int", "int", "bool", "int", "int" } },
            { name = "add_spawn", rval = nil, args = { "mtype_id", "int", "int", "int", "bool", "int", "int", "std::string" } },
            { name = "add_splash", rval = nil, args = { "field_id", "tripoint", "int", "int" } },
            { name = "add_splatter", rval = nil, args = { "field_id", "tripoint" } },
            { name = "add_splatter", rval = nil, args = { "field_id", "tripoint", "int" } },
            { name = "add_splatter_trail", rval = nil, args = { "field_id", "tripoint", "tripoint" } },
            { name = "add_trap", rval = nil, args = { "tripoint", "trap_id" } },
            { name = "add_vehicle_to_cache", rval = nil, args = { "vehicle" } },
            { name = "adjust_field_age", rval = "int", args = { "tripoint", "field_id", "int" } },
            { name = "adjust_field_strength", rval = "int", args = { "tripoint", "field_id", "int" } },
            { name = "adjust_radiation", rval = nil, args = { "int", "int", "int" } },
            { name = "adjust_radiation", rval = nil, args = { "tripoint", "int" } },
            { name = "allow_camp", rval = "bool", args = { "tripoint" } },
            { name = "allow_camp", rval = "bool", args = { "tripoint", "int" } },
            { name = "ambient_light_at", rval = "float", args = { "tripoint" } },
            { name = "bash_rating", rval = "int", args = { "int", "int", "int" } },
            { name = "bash_rating", rval = "int", args = { "int", "tripoint" } },
            { name = "bash_rating", rval = "int", args = { "int", "tripoint", "bool" } },
            { name = "bash_resistance", rval = "int", args = { "int", "int" } },
            { name = "bash_resistance", rval = "int", args = { "tripoint" } },
            { name = "bash_resistance", rval = "int", args = { "tripoint", "bool" } },
            { name = "bash_strength", rval = "int", args = { "int", "int" } },
            { name = "bash_strength", rval = "int", args = { "tripoint" } },
            { name = "bash_strength", rval = "int", args = { "tripoint", "bool" } },
            { name = "board_vehicle", rval = nil, args = { "tripoint", "player" } },
            { name = "build_floor_cache", rval = nil, args = { "int" } },
            { name = "build_floor_caches", rval = nil, args = { } },
            { name = "build_map_cache", rval = nil, args = { "int" } },
            { name = "build_map_cache", rval = nil, args = { "int", "bool" } },
            { name = "build_outside_cache", rval = nil, args = { "int" } },
            { name = "can_move_furniture", rval = "bool", args = { "tripoint" } },
            { name = "can_move_furniture", rval = "bool", args = { "tripoint", "player" } },
            { name = "can_put_items", rval = "bool", args = { "tripoint" } },
            { name = "can_put_items_ter_furn", rval = "bool", args = { "int", "int" } },
            { name = "can_put_items_ter_furn", rval = "bool", args = { "tripoint" } },
            { name = "clear_path", rval = "bool", args = { "tripoint", "tripoint", "int", "int", "int" } },
            { name = "clear_spawns", rval = nil, args = { } },
            { name = "clear_traps", rval = nil, args = { } },
            { name = "clear_vehicle_cache", rval = nil, args = { "int" } },
            { name = "clear_vehicle_list", rval = nil, args = { "int" } },
            { name = "climb_difficulty", rval = "int", args = { "tripoint" } },
            { name = "clip_to_bounds", rval = nil, args = { "tripoint" } },
            { name = "close_door", rval = "bool", args = { "tripoint", "bool", "bool" } },
            { name = "collapse_at", rval = nil, args = { "tripoint", "bool" } },
            { name = "collapse_check", rval = "int", args = { "tripoint" } },
            { name = "combined_movecost", rval = "int", args = { "tripoint", "tripoint" } },
            { name = "combined_movecost", rval = "int", args = { "tripoint", "tripoint", "vehicle" } },
            { name = "combined_movecost", rval = "int", args = { "tripoint", "tripoint", "vehicle", "int" } },
            { name = "combined_movecost", rval = "int", args = { "tripoint", "tripoint", "vehicle", "int", "bool" } },
            { name = "coord_to_angle", rval = "int", args = { "int", "int", "int", "int" } },
            { name = "could_see_items", rval = "bool", args = { "tripoint", "Creature" } },
            { name = "create_spores", rval = nil, args = { "tripoint" } },
            { name = "create_spores", rval = nil, args = { "tripoint", "Creature" } },
            { name = "creature_in_field", rval = nil, args = { "Creature" } },
            { name = "creature_on_trap", rval = nil, args = { "Creature" } },
            { name = "creature_on_trap", rval = nil, args = { "Creature", "bool" } },
            { name = "crush", rval = nil, args = { "tripoint" } },
            { name = "debug", rval = nil, args = { } },
            { name = "decay_fields_and_scent", rval = nil, args = { "int" } },
            { name = "delete_graffiti", rval = nil, args = { "tripoint" } },
            { name = "delete_signage", rval = nil, args = { "tripoint" } },
            { name = "destroy", rval = nil, args = { "tripoint" } },
            { name = "destroy", rval = nil, args = { "tripoint", "bool" } },
            { name = "destroy_furn", rval = nil, args = { "tripoint" } },
            { name = "destroy_furn", rval = nil, args = { "tripoint", "bool" } },
            { name = "destroy_vehicle", rval = nil, args = { "vehicle" } },
            { name = "disarm_trap", rval = nil, args = { "tripoint" } },
            { name = "disp_name", rval = "std::string", args = { "tripoint" } },
            { name = "displace_vehicle", rval = "vehicle&", args = { "tripoint", "tripoint" } },
            { name = "displace_water", rval = "bool", args = { "tripoint" } },
            { name = "draw_circle_furn", rval = nil, args = { "furn_id", "int", "int", "int" } },
            { name = "draw_circle_ter", rval = nil, args = { "ter_id", "float", "float", "float" } },
            { name = "draw_circle_ter", rval = nil, args = { "ter_id", "int", "int", "int" } },
            { name = "draw_fill_background", rval = nil, args = { "ter_id" } },
            { name = "draw_line_furn", rval = nil, args = { "furn_id", "int", "int", "int", "int" } },
            { name = "draw_line_ter", rval = nil, args = { "ter_id", "int", "int", "int", "int" } },
            { name = "draw_rough_circle_furn", rval = nil, args = { "furn_id", "int", "int", "int" } },
            { name = "draw_rough_circle_ter", rval = nil, args = { "ter_id", "int", "int", "int" } },
            { name = "draw_square_furn", rval = nil, args = { "furn_id", "int", "int", "int", "int" } },
            { name = "draw_square_ter", rval = nil, args = { "ter_id", "int", "int", "int", "int" } },
            { name = "drop_everything", rval = nil, args = { "tripoint" } },
            { name = "drop_furniture", rval = nil, args = { "tripoint" } },
            { name = "drop_items", rval = nil, args = { "tripoint" } },
            { name = "drop_vehicle", rval = nil, args = { "tripoint" } },
            { name = "features", rval = "std::string", args = { "int", "int" } },
            { name = "features", rval = "std::string", args = { "tripoint" } },
            { name = "field_at", rval = "field&", args = { "tripoint" } },
            { name = "find_clear_path", rval = "std::vector<tripoint>", args = { "tripoint", "tripoint" } },
            { name = "flammable_items_at", rval = "bool", args = { "tripoint" } },
            { name = "flammable_items_at", rval = "bool", args = { "tripoint", "int" } },
            { name = "free_volume", rval = "int", args = { "int", "int" } },
            { name = "free_volume", rval = "int", args = { "tripoint" } },
            { name = "fungalize", rval = nil, args = { "tripoint" } },
            { name = "fungalize", rval = nil, args = { "tripoint", "Creature" } },
            { name = "fungalize", rval = nil, args = { "tripoint", "Creature", "float" } },
            { name = "furn", rval = "furn_id", args = { "int", "int" } },
            { name = "furn", rval = "furn_id", args = { "tripoint" } },
            { name = "furn_set", rval = nil, args = { "int", "int", "furn_id" } },
            { name = "furn_set", rval = nil, args = { "tripoint", "furn_id" } },
            { name = "furnname", rval = "std::string", args = { "int", "int" } },
            { name = "furnname", rval = "std::string", args = { "tripoint" } },
            { name = "generate", rval = nil, args = { "int", "int", "int", "int" } },
            { name = "get_abs_sub", rval = "tripoint", args = { } },
            { name = "get_dir_circle", rval = "std::vector<tripoint>", args = { "tripoint", "tripoint" } },
            { name = "get_field", rval = "field_entry&", args = { "tripoint", "field_id" } },
            { name = "get_field_age", rval = "int", args = { "tripoint", "field_id" } },
            { name = "get_field_strength", rval = "int", args = { "tripoint", "field_id" } },
            { name = "get_radiation", rval = "int", args = { "tripoint" } },
            { name = "get_signage", rval = "std::string", args = { "tripoint" } },
            { name = "get_ter_harvest_season", rval = "int", args = { "int", "int" } },
            { name = "get_ter_harvest_season", rval = "int", args = { "tripoint" } },
            { name = "get_ter_harvestable", rval = "std::string", args = { "int", "int" } },
            { name = "get_ter_harvestable", rval = "std::string", args = { "tripoint" } },
            { name = "get_ter_transforms_into", rval = "ter_id", args = { "int", "int" } },
            { name = "get_ter_transforms_into", rval = "ter_id", args = { "tripoint" } },
            { name = "getabs", rval = "point", args = { "int", "int" } },
            { name = "getabs", rval = "point", args = { "point" } },
            { name = "getabs", rval = "tripoint", args = { "tripoint" } },
            { name = "getlocal", rval = "point", args = { "int", "int" } },
            { name = "getlocal", rval = "point", args = { "point" } },
            { name = "getlocal", rval = "tripoint", args = { "tripoint" } },
            { name = "getmapsize", rval = "int", args = { } },
            { name = "graffiti_at", rval = "std::string", args = { "tripoint" } },
            { name = "has_adjacent_furniture", rval = "bool", args = { "tripoint" } },
            { name = "has_flag", rval = "bool", args = { "std::string", "int", "int" } },
            { name = "has_flag", rval = "bool", args = { "std::string", "tripoint" } },
            { name = "has_flag_furn", rval = "bool", args = { "std::string", "int", "int" } },
            { name = "has_flag_furn", rval = "bool", args = { "std::string", "tripoint" } },
            { name = "has_flag_ter", rval = "bool", args = { "std::string", "int", "int" } },
            { name = "has_flag_ter", rval = "bool", args = { "std::string", "tripoint" } },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "std::string", "int", "int" } },
            { name = "has_flag_ter_or_furn", rval = "bool", args = { "std::string", "tripoint" } },
            { name = "has_floor", rval = "bool", args = { "tripoint" } },
            { name = "has_floor_or_support", rval = "bool", args = { "tripoint" } },
            { name = "has_furn", rval = "bool", args = { "int", "int" } },
            { name = "has_furn", rval = "bool", args = { "tripoint" } },
            { name = "has_graffiti_at", rval = "bool", args = { "tripoint" } },
            { name = "has_items", rval = "bool", args = { "tripoint" } },
            { name = "has_nearby_fire", rval = "bool", args = { "tripoint" } },
            { name = "has_nearby_fire", rval = "bool", args = { "tripoint", "int" } },
            { name = "has_zlevels", rval = "bool", args = { } },
            { name = "hit_with_acid", rval = "bool", args = { "tripoint" } },
            { name = "hit_with_fire", rval = "bool", args = { "tripoint" } },
            { name = "i_at", rval = "map_stack", args = { "int", "int" } },
            { name = "i_at", rval = "map_stack", args = { "tripoint" } },
            { name = "i_clear", rval = nil, args = { "int", "int" } },
            { name = "i_clear", rval = nil, args = { "tripoint" } },
            { name = "i_rem", rval = "int", args = { "int", "int", "int" } },
            { name = "i_rem", rval = "int", args = { "tripoint", "int" } },
            { name = "i_rem", rval = "std::list<item>::iterator", args = { "point", "std::list<item>::iterator" } },
            { name = "i_rem", rval = "std::list<item>::iterator", args = { "tripoint", "std::list<item>::iterator" } },
            { name = "i_rem", rval = nil, args = { "int", "int", "item" } },
            { name = "i_rem", rval = nil, args = { "tripoint", "item" } },
            { name = "impassable", rval = "bool", args = { "int", "int" } },
            { name = "impassable", rval = "bool", args = { "tripoint" } },
            { name = "impassable_ter_furn", rval = "bool", args = { "tripoint" } },
            { name = "inbounds", rval = "bool", args = { "int", "int" } },
            { name = "inbounds", rval = "bool", args = { "int", "int", "int" } },
            { name = "inbounds", rval = "bool", args = { "tripoint" } },
            { name = "inbounds_z", rval = "bool", args = { "int" } },
            { name = "is_bashable", rval = "bool", args = { "int", "int" } },
            { name = "is_bashable", rval = "bool", args = { "tripoint" } },
            { name = "is_bashable", rval = "bool", args = { "tripoint", "bool" } },
            { name = "is_bashable_furn", rval = "bool", args = { "int", "int" } },
            { name = "is_bashable_furn", rval = "bool", args = { "tripoint" } },
            { name = "is_bashable_ter", rval = "bool", args = { "int", "int" } },
            { name = "is_bashable_ter", rval = "bool", args = { "tripoint" } },
            { name = "is_bashable_ter", rval = "bool", args = { "tripoint", "bool" } },
            { name = "is_bashable_ter_furn", rval = "bool", args = { "int", "int" } },
            { name = "is_bashable_ter_furn", rval = "bool", args = { "tripoint" } },
            { name = "is_bashable_ter_furn", rval = "bool", args = { "tripoint", "bool" } },
            { name = "is_divable", rval = "bool", args = { "int", "int" } },
            { name = "is_divable", rval = "bool", args = { "tripoint" } },
            { name = "is_full", rval = "bool", args = { "tripoint" } },
            { name = "is_full", rval = "bool", args = { "tripoint", "int" } },
            { name = "is_full", rval = "bool", args = { "tripoint", "int", "int" } },
            { name = "is_outside", rval = "bool", args = { "int", "int" } },
            { name = "is_outside", rval = "bool", args = { "tripoint" } },
            { name = "item_from", rval = "item&", args = { "tripoint", "int" } },
            { name = "item_from", rval = "item&", args = { "vehicle", "int", "int" } },
            { name = "light_transparency", rval = "float", args = { "tripoint" } },
            { name = "load", rval = nil, args = { "int", "int", "int", "bool" } },
            { name = "make_rubble", rval = nil, args = { "tripoint" } },
            { name = "make_rubble", rval = nil, args = { "tripoint", "furn_id", "bool" } },
            { name = "make_rubble", rval = nil, args = { "tripoint", "furn_id", "bool", "ter_id" } },
            { name = "make_rubble", rval = nil, args = { "tripoint", "furn_id", "bool", "ter_id", "bool" } },
            { name = "marlossify", rval = "bool", args = { "tripoint" } },
            { name = "max_volume", rval = "int", args = { "int", "int" } },
            { name = "max_volume", rval = "int", args = { "tripoint" } },
            { name = "mop_spills", rval = "bool", args = { "tripoint" } },
            { name = "move_cost", rval = "int", args = { "int", "int" } },
            { name = "move_cost", rval = "int", args = { "int", "int", "vehicle" } },
            { name = "move_cost", rval = "int", args = { "tripoint" } },
            { name = "move_cost", rval = "int", args = { "tripoint", "vehicle" } },
            { name = "move_cost_ter_furn", rval = "int", args = { "int", "int" } },
            { name = "move_cost_ter_furn", rval = "int", args = { "tripoint" } },
            { name = "name", rval = "std::string", args = { "int", "int" } },
            { name = "name", rval = "std::string", args = { "tripoint" } },
            { name = "need_draw_lower_floor", rval = "bool", args = { "tripoint" } },
            { name = "obstacle_name", rval = "std::string", args = { "tripoint" } },
            { name = "on_vehicle_moved", rval = nil, args = { "int" } },
            { name = "open_door", rval = "bool", args = { "tripoint", "bool" } },
            { name = "open_door", rval = "bool", args = { "tripoint", "bool", "bool" } },
            { name = "passable", rval = "bool", args = { "int", "int" } },
            { name = "passable", rval = "bool", args = { "tripoint" } },
            { name = "passable_ter_furn", rval = "bool", args = { "tripoint" } },
            { name = "pl_line_of_sight", rval = "bool", args = { "tripoint", "int" } },
            { name = "pl_sees", rval = "bool", args = { "tripoint", "int" } },
            { name = "place_gas_pump", rval = nil, args = { "int", "int", "int" } },
            { name = "place_gas_pump", rval = nil, args = { "int", "int", "int", "std::string" } },
            { name = "place_npc", rval = "int", args = { "int", "int", "std::string" } },
            { name = "place_spawns", rval = nil, args = { "mongroup_id", "int", "int", "int", "int", "int", "float" } },
            { name = "place_toilet", rval = nil, args = { "int", "int" } },
            { name = "place_toilet", rval = nil, args = { "int", "int", "int" } },
            { name = "place_vending", rval = nil, args = { "int", "int", "std::string" } },
            { name = "post_process", rval = nil, args = { "int" } },
            { name = "process_active_items", rval = nil, args = { } },
            { name = "process_falling", rval = nil, args = { } },
            { name = "process_fields", rval = "bool", args = { } },
            { name = "propagate_field", rval = nil, args = { "tripoint", "field_id", "int" } },
            { name = "propagate_field", rval = nil, args = { "tripoint", "field_id", "int", "int" } },
            { name = "put_items_from_loc", rval = nil, args = { "std::string", "tripoint" } },
            { name = "put_items_from_loc", rval = nil, args = { "std::string", "tripoint", "int" } },
            { name = "random_outdoor_tile", rval = "point", args = { } },
            { name = "random_perimeter", rval = "tripoint", args = { "tripoint", "int" } },
            { name = "remove_field", rval = nil, args = { "tripoint", "field_id" } },
            { name = "remove_trap", rval = nil, args = { "tripoint" } },
            { name = "reset_vehicle_cache", rval = nil, args = { "int" } },
            { name = "rotate", rval = nil, args = { "int" } },
            { name = "route", rval = "std::vector<tripoint>", args = { "tripoint", "tripoint", "int", "int" } },
            { name = "route", rval = "std::vector<tripoint>", args = { "tripoint", "tripoint", "int", "int", "std::set<tripoint>" } },
            { name = "save", rval = nil, args = { } },
            { name = "sees", rval = "bool", args = { "tripoint", "tripoint", "int" } },
            { name = "sees_some_items", rval = "bool", args = { "tripoint", "Creature" } },
            { name = "set", rval = nil, args = { "int", "int", "ter_id", "furn_id" } },
            { name = "set", rval = nil, args = { "tripoint", "ter_id", "furn_id" } },
            { name = "set_field_age", rval = "int", args = { "tripoint", "field_id", "int" } },
            { name = "set_field_age", rval = "int", args = { "tripoint", "field_id", "int", "bool" } },
            { name = "set_field_strength", rval = "int", args = { "tripoint", "field_id", "int" } },
            { name = "set_field_strength", rval = "int", args = { "tripoint", "field_id", "int", "bool" } },
            { name = "set_floor_cache_dirty", rval = nil, args = { "int" } },
            { name = "set_graffiti", rval = nil, args = { "tripoint", "std::string" } },
            { name = "set_outside_cache_dirty", rval = nil, args = { "int" } },
            { name = "set_pathfinding_cache_dirty", rval = nil, args = { "int" } },
            { name = "set_radiation", rval = nil, args = { "int", "int", "int" } },
            { name = "set_radiation", rval = nil, args = { "tripoint", "int" } },
            { name = "set_signage", rval = nil, args = { "tripoint", "std::string" } },
            { name = "set_temperature", rval = nil, args = { "int", "int", "int" } },
            { name = "set_temperature", rval = nil, args = { "tripoint", "int" } },
            { name = "set_transparency_cache_dirty", rval = nil, args = { "int" } },
            { name = "shake_vehicle", rval = "int", args = { "vehicle", "int", "int" } },
            { name = "shift", rval = nil, args = { "int", "int" } },
            { name = "smash_items", rval = nil, args = { "tripoint", "int" } },
            { name = "spawn_an_item", rval = "item&", args = { "tripoint", "item", "int", "int" } },
            { name = "spawn_an_item", rval = nil, args = { "int", "int", "item", "int", "int" } },
            { name = "spawn_artifact", rval = nil, args = { "tripoint" } },
            { name = "spawn_item", rval = nil, args = { "int", "int", "std::string" } },
            { name = "spawn_item", rval = nil, args = { "int", "int", "std::string", "int" } },
            { name = "spawn_item", rval = nil, args = { "int", "int", "std::string", "int", "int" } },
            { name = "spawn_item", rval = nil, args = { "int", "int", "std::string", "int", "int", "int" } },
            { name = "spawn_item", rval = nil, args = { "int", "int", "std::string", "int", "int", "int", "int" } },
            { name = "spawn_item", rval = nil, args = { "tripoint", "std::string" } },
            { name = "spawn_item", rval = nil, args = { "tripoint", "std::string", "int" } },
            { name = "spawn_item", rval = nil, args = { "tripoint", "std::string", "int", "int" } },
            { name = "spawn_item", rval = nil, args = { "tripoint", "std::string", "int", "int", "int" } },
            { name = "spawn_item", rval = nil, args = { "tripoint", "std::string", "int", "int", "int", "int" } },
            { name = "spawn_items", rval = nil, args = { "int", "int", "std::vector<item>" } },
            { name = "spawn_monsters", rval = nil, args = { "bool" } },
            { name = "stored_volume", rval = "int", args = { "int", "int" } },
            { name = "stored_volume", rval = "int", args = { "tripoint" } },
            { name = "supports_above", rval = "bool", args = { "tripoint" } },
            { name = "ter", rval = "ter_id", args = { "int", "int" } },
            { name = "ter", rval = "ter_id", args = { "tripoint" } },
            { name = "ter_set", rval = nil, args = { "int", "int", "ter_id" } },
            { name = "ter_set", rval = nil, args = { "tripoint", "ter_id" } },
            { name = "tername", rval = "std::string", args = { "int", "int" } },
            { name = "tername", rval = "std::string", args = { "tripoint" } },
            { name = "tr_at", rval = "trap&", args = { "tripoint" } },
            { name = "trans", rval = "bool", args = { "tripoint" } },
            { name = "translate", rval = nil, args = { "ter_id", "ter_id" } },
            { name = "translate_radius", rval = nil, args = { "ter_id", "ter_id", "float", "tripoint" } },
            { name = "trap_locations", rval = "std::vector<tripoint>", args = { "trap_id" } },
            { name = "trap_set", rval = nil, args = { "tripoint", "trap_id" } },
            { name = "trigger_rc_items", rval = nil, args = { "std::string" } },
            { name = "unboard_vehicle", rval = nil, args = { "tripoint" } },
            { name = "update_pathfinding_cache", rval = nil, args = { "int" } },
            { name = "update_vehicle_cache", rval = nil, args = { "vehicle", "int" } },
            { name = "update_visibility_cache", rval = nil, args = { "int" } },
            { name = "valid_move", rval = "bool", args = { "tripoint", "tripoint" } },
            { name = "valid_move", rval = "bool", args = { "tripoint", "tripoint", "bool" } },
            { name = "valid_move", rval = "bool", args = { "tripoint", "tripoint", "bool", "bool" } },
            { name = "veh_at", rval = "vehicle&", args = { "tripoint" } },
            { name = "veh_part_coordinates", rval = "point", args = { "tripoint" } },
            { name = "vehact", rval = "bool", args = { "vehicle" } },
            { name = "vehicle_buoyancy", rval = "float", args = { "vehicle" } },
            { name = "vehicle_falling", rval = "bool", args = { "vehicle" } },
            { name = "vehicle_wheel_traction", rval = "float", args = { "vehicle" } },
            { name = "vehmove", rval = nil, args = { } },
            { name = "vehproceed", rval = "bool", args = { } },
            { name = "vertical_shift", rval = nil, args = { "int" } },
            { name = "water_from", rval = "item", args = { "tripoint" } },
        }
    },
    ter_t = {
        string_id = "ter_str_id",
        int_id = "ter_id",
        attributes = {
            close = { type = "ter_str_id", writable = true },
            connect_group = { type = "int", writable = true },
            harvest_season = { type = "season_type", writable = true },
            harvestable = { type = "std::string", writable = true },
            id = { type = "ter_str_id" },
            max_volume = { type = "int", writable = true },
            movecost = { type = "int", writable = true },
            name = { type = "std::string", writable = true },
            open = { type = "ter_str_id", writable = true },
            roof = { type = "ter_str_id", writable = true },
            transforms_into = { type = "ter_str_id", writable = true },
            transparent = { type = "bool", writable = true },
            trap = { type = "trap_id", writable = true },
            trap_id_str = { type = "std::string", writable = true },
        },
        functions = {
            { name = "check", rval = nil, args = { } },
            { name = "color", rval = "int", args = { } },
            { name = "connects_to", rval = "bool", args = { "int" } },
            { name = "count", static = true, rval = "int", args = { } },
            { name = "has_flag", rval = "bool", args = { "std::string" } },
            { name = "set_connects", rval = nil, args = { "std::string" } },
            { name = "set_flag", rval = nil, args = { "std::string" } },
            { name = "symbol", rval = "int", args = { } },
        }
    },
    furn_t = {
        string_id = "furn_str_id",
        int_id = "furn_id",
        attributes = {
            close = { type = "furn_str_id", writable = true },
            connect_group = { type = "int", writable = true },
            crafting_pseudo_item = { type = "std::string", writable = true },
            id = { type = "furn_str_id" },
            max_volume = { type = "int", writable = true },
            move_str_req = { type = "int", writable = true },
            movecost = { type = "int", writable = true },
            name = { type = "std::string", writable = true },
            open = { type = "furn_str_id", writable = true },
            transparent = { type = "bool", writable = true },
        },
        functions = {
            { name = "check", rval = nil, args = { } },
            { name = "color", rval = "int", args = { } },
            { name = "connects_to", rval = "bool", args = { "int" } },
            { name = "count", static = true, rval = "int", args = { } },
            { name = "crafting_ammo_item_type", rval = "itype&", args = { } },
            { name = "crafting_pseudo_item_type", rval = "itype&", args = { } },
            { name = "has_flag", rval = "bool", args = { "std::string" } },
            { name = "set_connects", rval = nil, args = { "std::string" } },
            { name = "set_flag", rval = nil, args = { "std::string" } },
            { name = "symbol", rval = "int", args = { } },
        }
    },
    Creature = {
        attributes = {
            moves = { type = "int", writable = true },
            underwater = { type = "bool", writable = true },
        },
        functions = {
            { name = "add_effect", rval = nil, args = { "efftype_id", "int" } },
            { name = "add_effect", rval = nil, args = { "efftype_id", "int", "body_part" } },
            { name = "add_effect", rval = nil, args = { "efftype_id", "int", "body_part", "bool" } },
            { name = "add_effect", rval = nil, args = { "efftype_id", "int", "body_part", "bool", "int" } },
            { name = "add_effect", rval = nil, args = { "efftype_id", "int", "body_part", "bool", "int", "bool" } },
            { name = "add_env_effect", rval = "bool", args = { "efftype_id", "body_part", "int", "int" } },
            { name = "add_env_effect", rval = "bool", args = { "efftype_id", "body_part", "int", "int", "body_part" } },
            { name = "add_env_effect", rval = "bool", args = { "efftype_id", "body_part", "int", "int", "body_part", "bool" } },
            { name = "add_env_effect", rval = "bool", args = { "efftype_id", "body_part", "int", "int", "body_part", "bool", "int" } },
            { name = "add_env_effect", rval = "bool", args = { "efftype_id", "body_part", "int", "int", "body_part", "bool", "int", "bool" } },
            { name = "apply_damage", rval = nil, args = { "Creature", "body_part", "int" } },
            { name = "avoid_trap", rval = "bool", args = { "tripoint", "trap" } },
            { name = "basic_symbol_color", rval = "int", args = { } },
            { name = "bleed", rval = nil, args = { } },
            { name = "bloodType", rval = "field_id", args = { } },
            { name = "check_dead_state", rval = nil, args = { } },
            { name = "clear_effects", rval = nil, args = { } },
            { name = "deal_melee_attack", rval = "int", args = { "Creature", "int" } },
            { name = "die", rval = nil, args = { "Creature" } },
            { name = "digging", rval = "bool", args = { } },
            { name = "disp_name", rval = "std::string", args = { "bool" } },
            { name = "disp_name", rval = "std::string", args = { } },
            { name = "dodge_roll", rval = "int", args = { } },
            { name = "fall_damage_mod", rval = "float", args = { } },
            { name = "get_armor_bash", rval = "int", args = { "body_part" } },
            { name = "get_armor_bash_base", rval = "int", args = { "body_part" } },
            { name = "get_armor_bash_bonus", rval = "int", args = { } },
            { name = "get_armor_cut", rval = "int", args = { "body_part" } },
            { name = "get_armor_cut_base", rval = "int", args = { "body_part" } },
            { name = "get_armor_cut_bonus", rval = "int", args = { } },
            { name = "get_armor_type", rval = "int", args = { "damage_type", "body_part" } },
            { name = "get_bash_bonus", rval = "int", args = { } },
            { name = "get_bash_mult", rval = "float", args = { } },
            { name = "get_block_bonus", rval = "int", args = { } },
            { name = "get_cut_bonus", rval = "int", args = { } },
            { name = "get_cut_mult", rval = "float", args = { } },
            { name = "get_dodge", rval = "int", args = { } },
            { name = "get_dodge_base", rval = "int", args = { } },
            { name = "get_dodge_bonus", rval = "int", args = { } },
            { name = "get_effect", rval = "effect&", args = { "efftype_id" } },
            { name = "get_effect", rval = "effect&", args = { "efftype_id", "body_part" } },
            { name = "get_effect_dur", rval = "int", args = { "efftype_id" } },
            { name = "get_effect_dur", rval = "int", args = { "efftype_id", "body_part" } },
            { name = "get_effect_int", rval = "int", args = { "efftype_id" } },
            { name = "get_effect_int", rval = "int", args = { "efftype_id", "body_part" } },
            { name = "get_env_resist", rval = "int", args = { "body_part" } },
            { name = "get_grab_resist", rval = "int", args = { } },
            { name = "get_hit", rval = "int", args = { } },
            { name = "get_hit_base", rval = "int", args = { } },
            { name = "get_hit_bonus", rval = "int", args = { } },
            { name = "get_hp", rval = "int", args = { "hp_part" } },
            { name = "get_hp", rval = "int", args = { } },
            { name = "get_hp_max", rval = "int", args = { "hp_part" } },
            { name = "get_hp_max", rval = "int", args = { } },
            { name = "get_killer", rval = "Creature&", args = { } },
            { name = "get_melee", rval = "int", args = { } },
            { name = "get_melee_quiet", rval = "bool", args = { } },
            { name = "get_name", rval = "std::string", args = { } },
            { name = "get_num_blocks", rval = "int", args = { } },
            { name = "get_num_blocks_bonus", rval = "int", args = { } },
            { name = "get_num_dodges", rval = "int", args = { } },
            { name = "get_num_dodges_bonus", rval = "int", args = { } },
            { name = "get_pain", rval = "int", args = { } },
            { name = "get_perceived_pain", rval = "int", args = { } },
            { name = "get_random_body_part", rval = "body_part", args = { "bool" } },
            { name = "get_random_body_part", rval = "body_part", args = { } },
            { name = "get_size", rval = "m_size", args = { } },
            { name = "get_speed", rval = "int", args = { } },
            { name = "get_speed_base", rval = "int", args = { } },
            { name = "get_speed_bonus", rval = "int", args = { } },
            { name = "get_throw_resist", rval = "int", args = { } },
            { name = "get_value", rval = "std::string", args = { "std::string" } },
            { name = "get_weight", rval = "int", args = { } },
            { name = "gibType", rval = "field_id", args = { } },
            { name = "has_effect", rval = "bool", args = { "efftype_id" } },
            { name = "has_effect", rval = "bool", args = { "efftype_id", "body_part" } },
            { name = "has_grab_break_tec", rval = "bool", args = { } },
            { name = "has_trait", rval = "bool", args = { "std::string" } },
            { name = "has_weapon", rval = "bool", args = { } },
            { name = "hit_roll", rval = "int", args = { } },
            { name = "hp_percentage", rval = "int", args = { } },
            { name = "impact", rval = "int", args = { "int", "tripoint" } },
            { name = "in_sleep_state", rval = "bool", args = { } },
            { name = "is_dangerous_field", rval = "bool", args = { "field_entry" } },
            { name = "is_dangerous_fields", rval = "bool", args = { "field" } },
            { name = "is_dead_state", rval = "bool", args = { } },
            { name = "is_elec_immune", rval = "bool", args = { } },
            { name = "is_fake", rval = "bool", args = { } },
            { name = "is_hallucination", rval = "bool", args = { } },
            { name = "is_immune_damage", rval = "bool", args = { "damage_type" } },
            { name = "is_immune_effect", rval = "bool", args = { "efftype_id" } },
            { name = "is_immune_field", rval = "bool", args = { "field_id" } },
            { name = "is_monster", rval = "bool", args = { } },
            { name = "is_npc", rval = "bool", args = { } },
            { name = "is_on_ground", rval = "bool", args = { } },
            { name = "is_player", rval = "bool", args = { } },
            { name = "is_symbol_highlighted", rval = "bool", args = { } },
            { name = "is_underwater", rval = "bool", args = { } },
            { name = "is_warm", rval = "bool", args = { } },
            { name = "knock_back_from", rval = nil, args = { "tripoint" } },
            { name = "made_of", rval = "bool", args = { "material_id" } },
            { name = "melee_attack", rval = nil, args = { "Creature", "bool" } },
            { name = "melee_attack", rval = nil, args = { "Creature", "bool", "matec_id" } },
            { name = "mod_bash_bonus", rval = nil, args = { "int" } },
            { name = "mod_block_bonus", rval = nil, args = { "int" } },
            { name = "mod_cut_bonus", rval = nil, args = { "int" } },
            { name = "mod_dodge_bonus", rval = nil, args = { "int" } },
            { name = "mod_hit_bonus", rval = nil, args = { "int" } },
            { name = "mod_moves", rval = nil, args = { "int" } },
            { name = "mod_pain", rval = nil, args = { "int" } },
            { name = "mod_pain_noresist", rval = nil, args = { "int" } },
            { name = "mod_speed_bonus", rval = nil, args = { "int" } },
            { name = "mod_stat", rval = nil, args = { "std::string", "int" } },
            { name = "move_effects", rval = "bool", args = { "bool" } },
            { name = "normalize", rval = nil, args = { } },
            { name = "on_dodge", rval = nil, args = { "Creature", "int" } },
            { name = "on_hit", rval = nil, args = { "Creature" } },
            { name = "on_hit", rval = nil, args = { "Creature", "body_part" } },
            { name = "on_hit", rval = nil, args = { "Creature", "body_part", "int" } },
            { name = "pos", rval = "tripoint", args = { } },
            { name = "posx", rval = "int", args = { } },
            { name = "posy", rval = "int", args = { } },
            { name = "posz", rval = "int", args = { } },
            { name = "power_rating", rval = "float", args = { } },
            { name = "process_effects", rval = nil, args = { } },
            { name = "process_turn", rval = nil, args = { } },
            { name = "remove_effect", rval = "bool", args = { "efftype_id" } },
            { name = "remove_effect", rval = "bool", args = { "efftype_id", "body_part" } },
            { name = "remove_value", rval = nil, args = { "std::string" } },
            { name = "reset", rval = nil, args = { } },
            { name = "reset_bonuses", rval = nil, args = { } },
            { name = "reset_stats", rval = nil, args = { } },
            { name = "sees", rval = "bool", args = { "Creature" } },
            { name = "sees", rval = "bool", args = { "int", "int" } },
            { name = "sees", rval = "bool", args = { "point" } },
            { name = "sees", rval = "bool", args = { "tripoint" } },
            { name = "sees", rval = "bool", args = { "tripoint", "bool" } },
            { name = "select_body_part", rval = "body_part", args = { "Creature", "int" } },
            { name = "set_armor_bash_bonus", rval = nil, args = { "int" } },
            { name = "set_armor_cut_bonus", rval = nil, args = { "int" } },
            { name = "set_bash_bonus", rval = nil, args = { "int" } },
            { name = "set_bash_mult", rval = nil, args = { "float" } },
            { name = "set_block_bonus", rval = nil, args = { "int" } },
            { name = "set_cut_bonus", rval = nil, args = { "int" } },
            { name = "set_cut_mult", rval = nil, args = { "float" } },
            { name = "set_dodge_bonus", rval = nil, args = { "int" } },
            { name = "set_fake", rval = nil, args = { "bool" } },
            { name = "set_grab_resist", rval = nil, args = { "int" } },
            { name = "set_hit_bonus", rval = nil, args = { "int" } },
            { name = "set_melee_quiet", rval = nil, args = { "bool" } },
            { name = "set_moves", rval = nil, args = { "int" } },
            { name = "set_num_blocks_bonus", rval = nil, args = { "int" } },
            { name = "set_num_dodges_bonus", rval = nil, args = { "int" } },
            { name = "set_pain", rval = nil, args = { "int" } },
            { name = "set_speed_base", rval = nil, args = { "int" } },
            { name = "set_speed_bonus", rval = nil, args = { "int" } },
            { name = "set_throw_resist", rval = nil, args = { "int" } },
            { name = "set_value", rval = nil, args = { "std::string", "std::string" } },
            { name = "setpos", rval = nil, args = { "tripoint" } },
            { name = "sight_range", rval = "int", args = { "int" } },
            { name = "skin_name", rval = "std::string", args = { } },
            { name = "speed_rating", rval = "float", args = { } },
            { name = "stability_roll", rval = "int", args = { } },
            { name = "symbol", rval = "std::string", args = { } },
            { name = "symbol_color", rval = "int", args = { } },
            { name = "uncanny_dodge", rval = "bool", args = { } },
            { name = "weight_capacity", rval = "int", args = { } },
        }
    },
    monster = {
        parent = "Creature",
        attributes = {
            anger = { type = "int", writable = true },
            friendly = { type = "int", writable = true },
            hallucination = { type = "bool", writable = true },
            ignoring = { type = "int", writable = true },
            inv = { type = "std::vector<item>", writable = true },
            last_updated = { type = "int", writable = true },
            made_footstep = { type = "bool", writable = true },
            mission_id = { type = "int", writable = true },
            morale = { type = "int", writable = true },
            no_corpse_quiet = { type = "bool", writable = true },
            no_extra_death_drops = { type = "bool", writable = true },
            staircount = { type = "int", writable = true },
            type = { type = "mtype", writable = true },
            unique_name = { type = "std::string", writable = true },
            wander_pos = { type = "tripoint", writable = true },
            wandf = { type = "int", writable = true },
        },
        functions = {
            { name = "add_item", rval = nil, args = { "item" } },
            { name = "attack_at", rval = "bool", args = { "tripoint" } },
            { name = "attack_target", rval = "Creature&", args = { } },
            { name = "bash_at", rval = "bool", args = { "tripoint" } },
            { name = "bash_estimate", rval = "int", args = { } },
            { name = "bash_skill", rval = "int", args = { } },
            { name = "calc_climb_cost", rval = "int", args = { "tripoint", "tripoint" } },
            { name = "calc_movecost", rval = "int", args = { "tripoint", "tripoint" } },
            { name = "can_act", rval = "bool", args = { } },
            { name = "can_drown", rval = "bool", args = { } },
            { name = "can_hear", rval = "bool", args = { } },
            { name = "can_move_to", rval = "bool", args = { "tripoint" } },
            { name = "can_see", rval = "bool", args = { } },
            { name = "can_submerge", rval = "bool", args = { } },
            { name = "can_upgrade", rval = "bool", args = { } },
            { name = "color_with_effects", rval = "int", args = { } },
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "die_in_explosion", rval = nil, args = { "Creature" } },
            { name = "disable_special", rval = nil, args = { "std::string" } },
            { name = "drop_items_on_death", rval = nil, args = { } },
            { name = "explode", rval = nil, args = { } },
            { name = "footsteps", rval = nil, args = { "tripoint" } },
            { name = "get_hp", rval = "int", args = { } },
            { name = "get_hp_max", rval = "int", args = { } },
            { name = "group_bash_skill", rval = "int", args = { "tripoint" } },
            { name = "hasten_upgrade", rval = nil, args = { } },
            { name = "heal", rval = "int", args = { "int" } },
            { name = "heal", rval = "int", args = { "int", "bool" } },
            { name = "hear_sound", rval = nil, args = { "tripoint", "int", "int" } },
            { name = "init_from_item", rval = nil, args = { "item" } },
            { name = "is_dead", rval = "bool", args = { } },
            { name = "is_fleeing", rval = "bool", args = { "player" } },
            { name = "load_info", rval = nil, args = { "std::string" } },
            { name = "made_of", rval = "bool", args = { "phase_id" } },
            { name = "make_ally", rval = nil, args = { "monster" } },
            { name = "make_friendly", rval = nil, args = { } },
            { name = "make_fungus", rval = "bool", args = { } },
            { name = "move", rval = nil, args = { } },
            { name = "move_target", rval = "tripoint", args = { } },
            { name = "move_to", rval = "bool", args = { "tripoint" } },
            { name = "move_to", rval = "bool", args = { "tripoint", "bool" } },
            { name = "move_to", rval = "bool", args = { "tripoint", "bool", "float" } },
            { name = "name", rval = "std::string", args = { "int" } },
            { name = "name", rval = "std::string", args = { } },
            { name = "name_with_armor", rval = "std::string", args = { } },
            { name = "on_load", rval = nil, args = { } },
            { name = "on_unload", rval = nil, args = { } },
            { name = "poly", rval = nil, args = { "mtype_id" } },
            { name = "process_triggers", rval = nil, args = { } },
            { name = "push_to", rval = "bool", args = { "tripoint", "int", "int" } },
            { name = "rate_target", rval = "float", args = { "Creature", "float" } },
            { name = "rate_target", rval = "float", args = { "Creature", "float", "bool" } },
            { name = "reset_special", rval = nil, args = { "std::string" } },
            { name = "reset_special_rng", rval = nil, args = { "std::string" } },
            { name = "scent_move", rval = "tripoint", args = { } },
            { name = "serialize", rval = "std::string", args = { } },
            { name = "set_dest", rval = nil, args = { "tripoint" } },
            { name = "set_hp", rval = nil, args = { "int" } },
            { name = "set_special", rval = nil, args = { "std::string", "int" } },
            { name = "shift", rval = nil, args = { "int", "int" } },
            { name = "spawn", rval = nil, args = { "tripoint" } },
            { name = "stumble", rval = nil, args = { } },
            { name = "to_item", rval = "item", args = { } },
            { name = "try_upgrade", rval = nil, args = { "bool" } },
            { name = "turns_to_reach", rval = "int", args = { "int", "int" } },
            { name = "unset_dest", rval = nil, args = { } },
            { name = "wander", rval = "bool", args = { } },
            { name = "wander_to", rval = nil, args = { "tripoint", "int" } },
            { name = "will_reach", rval = "bool", args = { "int", "int" } },
        }
    },
    martialart = {
        string_id = "matype_id",
        attributes = {
            arm_block = { type = "int", writable = true },
            arm_block_with_bio_armor_arms = { type = "bool", writable = true },
            description = { type = "std::string", writable = true },
            id = { type = "matype_id" },
            leg_block = { type = "int", writable = true },
            leg_block_with_bio_armor_legs = { type = "bool", writable = true },
            name = { type = "std::string", writable = true },
            onattack_buffs = { type = "std::vector<mabuff_id>", writable = true },
            onblock_buffs = { type = "std::vector<mabuff_id>", writable = true },
            ondodge_buffs = { type = "std::vector<mabuff_id>", writable = true },
            ongethit_buffs = { type = "std::vector<mabuff_id>", writable = true },
            onhit_buffs = { type = "std::vector<mabuff_id>", writable = true },
            onmove_buffs = { type = "std::vector<mabuff_id>", writable = true },
            static_buffs = { type = "std::vector<mabuff_id>", writable = true },
            strictly_unarmed = { type = "bool", writable = true },
            techniques = { type = "std::set<matec_id>", writable = true },
            weapons = { type = "std::set<std::string>", writable = true },
        },
        functions = {
            { name = "apply_onattack_buffs", rval = nil, args = { "player" } },
            { name = "apply_onblock_buffs", rval = nil, args = { "player" } },
            { name = "apply_ondodge_buffs", rval = nil, args = { "player" } },
            { name = "apply_ongethit_buffs", rval = nil, args = { "player" } },
            { name = "apply_onhit_buffs", rval = nil, args = { "player" } },
            { name = "apply_onmove_buffs", rval = nil, args = { "player" } },
            { name = "apply_static_buffs", rval = nil, args = { "player" } },
            { name = "has_technique", rval = "bool", args = { "player", "matec_id" } },
            { name = "has_weapon", rval = "bool", args = { "std::string" } },
            { name = "weapon_valid", rval = "bool", args = { "item" } },
        }
    },
    material_type = {
        string_id = "material_id",
        attributes = {
            id = { type = "material_id" },
        },
        functions = {
            { name = "acid_resist", rval = "int", args = { } },
            { name = "bash_dmg_verb", rval = "std::string", args = { } },
            { name = "bash_resist", rval = "int", args = { } },
            { name = "check", rval = nil, args = { } },
            { name = "chip_resist", rval = "int", args = { } },
            { name = "cut_dmg_verb", rval = "std::string", args = { } },
            { name = "cut_resist", rval = "int", args = { } },
            { name = "dam_resist", rval = "int", args = { "damage_type" } },
            { name = "density", rval = "int", args = { } },
            { name = "dmg_adj", rval = "std::string", args = { "int" } },
            { name = "edible", rval = "bool", args = { } },
            { name = "elec_resist", rval = "int", args = { } },
            { name = "fire_resist", rval = "int", args = { } },
            { name = "ident", rval = "material_id", args = { } },
            { name = "name", rval = "std::string", args = { } },
            { name = "repaired_with", rval = "std::string", args = { } },
            { name = "salvaged_into", rval = "std::string", args = { } },
            { name = "soft", rval = "bool", args = { } },
            { name = "vitamin", rval = "float", args = { "vitamin_id" } },
        }
    },
    start_location = {
        string_id = "start_location_id",
        functions = {
            { name = "add_map_special", rval = nil, args = { "tripoint", "std::string" } },
            { name = "burn", rval = nil, args = { "tripoint", "int", "int" } },
            { name = "find_player_initial_location", rval = "tripoint", args = { } },
            { name = "flags", rval = "std::set<std::string>", args = { } },
            { name = "handle_heli_crash", rval = nil, args = { "player" } },
            { name = "name", rval = "std::string", args = { } },
            { name = "place_player", rval = nil, args = { "player" } },
            { name = "prepare_map", rval = nil, args = { "tripoint" } },
            { name = "target", rval = "std::string", args = { } },
        }
    },
    ma_buff = {
        string_id = "mabuff_id",
        attributes = {
            blocks_bonus = { type = "int", writable = true },
            buff_duration = { type = "int", writable = true },
            description = { type = "std::string", writable = true },
            dodges_bonus = { type = "int", writable = true },
            id = { type = "mabuff_id" },
            max_stacks = { type = "int", writable = true },
            melee_allowed = { type = "bool", writable = true },
            name = { type = "std::string", writable = true },
            quiet = { type = "bool", writable = true },
            strictly_unarmed = { type = "bool", writable = true },
            throw_immune = { type = "bool", writable = true },
        },
        functions = {
            { name = "apply_buff", rval = nil, args = { "player" } },
            { name = "apply_player", rval = nil, args = { "player" } },
            { name = "armor_bonus", rval = "int", args = { "player", "damage_type" } },
            { name = "block_bonus", rval = "int", args = { "player" } },
            { name = "can_melee", rval = "bool", args = { } },
            { name = "damage_bonus", rval = "float", args = { "player", "damage_type" } },
            { name = "damage_mult", rval = "float", args = { "player", "damage_type" } },
            { name = "dodge_bonus", rval = "int", args = { "player" } },
            { name = "from_effect", static = true, rval = "ma_buff&", args = { "effect" } },
            { name = "get_effect_id", rval = "efftype_id", args = { } },
            { name = "hit_bonus", rval = "int", args = { "player" } },
            { name = "is_quiet", rval = "bool", args = { } },
            { name = "is_throw_immune", rval = "bool", args = { } },
            { name = "is_valid_player", rval = "bool", args = { "player" } },
            { name = "speed_bonus", rval = "int", args = { "player" } },
        }
    },
    ma_technique = {
        string_id = "matec_id",
        attributes = {
            aoe = { type = "std::string", writable = true },
            block_counter = { type = "bool", writable = true },
            crit_tec = { type = "bool", writable = true },
            defensive = { type = "bool", writable = true },
            disarms = { type = "bool", writable = true },
            dodge_counter = { type = "bool", writable = true },
            down_dur = { type = "int", writable = true },
            dummy = { type = "bool", writable = true },
            flags = { type = "std::set<std::string>", writable = true },
            goal = { type = "std::string", writable = true },
            grab_break = { type = "bool", writable = true },
            id = { type = "matec_id" },
            knockback_dist = { type = "int", writable = true },
            knockback_spread = { type = "float", writable = true },
            miss_recovery = { type = "bool", writable = true },
            name = { type = "std::string", writable = true },
            npc_message = { type = "std::string", writable = true },
            player_message = { type = "std::string", writable = true },
            stun_dur = { type = "int", writable = true },
            weighting = { type = "int", writable = true },
        },
        functions = {
            { name = "armor_penetration", rval = "float", args = { "player", "damage_type" } },
            { name = "damage_bonus", rval = "float", args = { "player", "damage_type" } },
            { name = "damage_multiplier", rval = "float", args = { "player", "damage_type" } },
            { name = "is_valid_player", rval = "bool", args = { "player" } },
            { name = "move_cost_multiplier", rval = "float", args = { "player" } },
            { name = "move_cost_penalty", rval = "float", args = { "player" } },
        }
    },
    Skill = {
        string_id = "skill_id",
        has_equal = true,
        functions = {
            { name = "description", rval = "std::string", args = { } },
            { name = "from_legacy_int", static = true, rval = "skill_id", args = { "int" } },
            { name = "ident", rval = "skill_id", args = { } },
            { name = "is_combat_skill", rval = "bool", args = { } },
            { name = "name", rval = "std::string", args = { } },
            { name = "random_skill", static = true, rval = "skill_id", args = { } },
            { name = "random_skill_with_tag", static = true, rval = "skill_id", args = { "std::string" } },
            { name = "skill_count", static = true, rval = "int", args = { } },
        }
    },
    quality = {
        string_id = "quality_id",
    },
    species_type = {
        string_id = "species_id",
        attributes = {
            id = { type = "species_id" },
        },
    },
    MonsterGroup = {
        string_id = "mongroup_id",
        attributes = {
            defaultMonster = { type = "mtype_id", writable = true },
            is_safe = { type = "bool", writable = true },
            monster_group_time = { type = "int", writable = true },
            name = { type = "mongroup_id", writable = true },
            new_monster_group = { type = "mongroup_id", writable = true },
            replace_monster_group = { type = "bool", writable = true },
        },
        functions = {
            { name = "IsMonsterInGroup", rval = "bool", args = { "mtype_id" } },
        }
    },
    mtype = {
        string_id = "mtype_id",
        attributes = {
            agro = { type = "int", writable = true },
            armor_acid = { type = "int", writable = true },
            armor_bash = { type = "int", writable = true },
            armor_cut = { type = "int", writable = true },
            armor_fire = { type = "int", writable = true },
            armor_stab = { type = "int", writable = true },
            attack_cost = { type = "int", writable = true },
            burn_into = { type = "mtype_id", writable = true },
            categories = { type = "std::set<std::string>", writable = true },
            color = { type = "int", writable = true },
            death_drops = { type = "std::string", writable = true },
            def_chance = { type = "int", writable = true },
            description = { type = "std::string", writable = true },
            difficulty = { type = "int", writable = true },
            half_life = { type = "int", writable = true },
            hp = { type = "int", writable = true },
            id = { type = "mtype_id" },
            luminance = { type = "float", writable = true },
            mat = { type = "std::vector<material_id>", writable = true },
            melee_dice = { type = "int", writable = true },
            melee_sides = { type = "int", writable = true },
            melee_skill = { type = "int", writable = true },
            morale = { type = "int", writable = true },
            phase = { type = "phase_id", writable = true },
            revert_to_itype = { type = "std::string", writable = true },
            size = { type = "m_size", writable = true },
            sk_dodge = { type = "int", writable = true },
            special_attacks_names = { type = "std::vector<std::string>", writable = true },
            species = { type = "std::set<species_id>", writable = true },
            speed = { type = "int", writable = true },
            sym = { type = "std::string", writable = true },
            upgrade_group = { type = "mongroup_id", writable = true },
            upgrade_into = { type = "mtype_id", writable = true },
            upgrades = { type = "bool", writable = true },
            vision_day = { type = "int", writable = true },
            vision_night = { type = "int", writable = true },
        },
        functions = {
            { name = "bloodType", rval = "field_id", args = { } },
            { name = "get_meat_chunks_count", rval = "int", args = { } },
            { name = "get_meat_itype", rval = "std::string", args = { } },
            { name = "gibType", rval = "field_id", args = { } },
            { name = "has_flag", rval = "bool", args = { "std::string" } },
            { name = "has_special_attack", rval = "bool", args = { "std::string" } },
            { name = "in_category", rval = "bool", args = { "std::string" } },
            { name = "in_species", rval = "bool", args = { "species_id" } },
            { name = "in_species", rval = "bool", args = { "species_type" } },
            { name = "made_of", rval = "bool", args = { "material_id" } },
            { name = "nname", rval = "std::string", args = { "int" } },
            { name = "nname", rval = "std::string", args = { } },
            { name = "same_species", rval = "bool", args = { "mtype" } },
            { name = "set_flag", rval = nil, args = { "std::string", "bool" } },
        }
    },
    mongroup = {
        attributes = {
            diffuse = { type = "bool", writable = true },
            dying = { type = "bool", writable = true },
            horde = { type = "bool", writable = true },
            horde_behaviour = { type = "std::string", writable = true },
            interest = { type = "int", writable = true },
            population = { type = "int", writable = true },
            pos = { type = "tripoint", writable = true },
            radius = { type = "int", writable = true },
            target = { type = "tripoint", writable = true },
            type = { type = "mongroup_id", writable = true },
        },
        functions = {
            { name = "clear", rval = nil, args = { } },
            { name = "dec_interest", rval = nil, args = { "int" } },
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "empty", rval = "bool", args = { } },
            { name = "inc_interest", rval = nil, args = { "int" } },
            { name = "is_safe", rval = "bool", args = { } },
            { name = "serialize", rval = "std::string", args = { } },
            { name = "set_interest", rval = nil, args = { "int" } },
            { name = "set_target", rval = nil, args = { "int", "int" } },
            { name = "wander", rval = nil, args = { "overmap" } },
        }
    },
    overmap = {
        functions = {
            { name = "add_note", rval = nil, args = { "int", "int", "int", "std::string" } },
            { name = "clear_mon_groups", rval = nil, args = { } },
            { name = "delete_note", rval = nil, args = { "int", "int", "int" } },
            { name = "display_notes", static = true, rval = "point", args = { "int" } },
            { name = "draw_editor", static = true, rval = "tripoint", args = { } },
            { name = "draw_hordes", static = true, rval = "tripoint", args = { } },
            { name = "draw_overmap", static = true, rval = "tripoint", args = { "int" } },
            { name = "draw_overmap", static = true, rval = "tripoint", args = { } },
            { name = "draw_scents", static = true, rval = "tripoint", args = { } },
            { name = "draw_weather", static = true, rval = "tripoint", args = { } },
            { name = "draw_zones", static = true, rval = "tripoint", args = { "tripoint", "tripoint", "int" } },
            { name = "find_notes", rval = "std::vector<point>", args = { "int", "std::string" } },
            { name = "find_random_omt", rval = "tripoint", args = { "std::string" } },
            { name = "find_terrain", rval = "std::vector<point>", args = { "std::string", "int" } },
            { name = "get_bottom_border", rval = "int", args = { } },
            { name = "get_left_border", rval = "int", args = { } },
            { name = "get_right_border", rval = "int", args = { } },
            { name = "get_top_border", rval = "int", args = { } },
            { name = "has_note", rval = "bool", args = { "int", "int", "int" } },
            { name = "is_explored", rval = "bool", args = { "int", "int", "int" } },
            { name = "is_road_or_highway", rval = "bool", args = { "int", "int", "int" } },
            { name = "mongroup_check", rval = "bool", args = { "mongroup" } },
            { name = "note", rval = "std::string", args = { "int", "int", "int" } },
            { name = "num_mongroups", rval = "int", args = { } },
            { name = "num_monsters", rval = "int", args = { } },
            { name = "pos", rval = "point", args = { } },
            { name = "save", rval = nil, args = { } },
        }
    },
    itype = {
        attributes = {
            color = { type = "int", writable = true },
            countdown_destroy = { type = "bool", writable = true },
            countdown_interval = { type = "int", writable = true },
            default_container = { type = "std::string", writable = true },
            description = { type = "std::string", writable = true },
            explode_in_fire = { type = "bool", writable = true },
            integral_volume = { type = "int", writable = true },
            item_tags = { type = "std::set<std::string>", writable = true },
            light_emission = { type = "int", writable = true },
            m_to_hit = { type = "int", writable = true },
            magazine_well = { type = "int", writable = true },
            materials = { type = "std::vector<material_id>", writable = true },
            melee_cut = { type = "int", writable = true },
            melee_dam = { type = "int", writable = true },
            min_dex = { type = "int", writable = true },
            min_int = { type = "int", writable = true },
            min_per = { type = "int", writable = true },
            min_str = { type = "int", writable = true },
            phase = { type = "phase_id", writable = true },
            price = { type = "int", writable = true },
            price_post = { type = "int", writable = true },
            rigid = { type = "bool", writable = true },
            snippet_category = { type = "std::string", writable = true },
            stack_size = { type = "int", writable = true },
            sym = { type = "std::string", writable = true },
            techniques = { type = "std::set<matec_id>", writable = true },
            volume = { type = "int", writable = true },
            weight = { type = "int", writable = true },
        },
        functions = {
            { name = "can_use", rval = "bool", args = { "std::string" } },
            { name = "charges_default", rval = "int", args = { } },
            { name = "charges_to_use", rval = "int", args = { } },
            { name = "count_by_charges", rval = "bool", args = { } },
            { name = "get_id", rval = "std::string", args = { } },
            { name = "get_item_type_string", rval = "std::string", args = { } },
            { name = "has_use", rval = "bool", args = { } },
            { name = "invoke", rval = "int", args = { "player", "item", "tripoint" } },
            { name = "invoke", rval = "int", args = { "player", "item", "tripoint", "std::string" } },
            { name = "maximum_charges", rval = "int", args = { } },
            { name = "nname", rval = "std::string", args = { "int" } },
            { name = "tick", rval = "int", args = { "player", "item", "tripoint" } },
        }
    },
    trap = {
        string_id = "trap_str_id",
        int_id = "trap_id",
        attributes = {
            color = { type = "int", writable = true },
            id = { type = "trap_str_id" },
            loadid = { type = "trap_id" },
            name = { type = "std::string", writable = true },
            sym = { type = "int", writable = true },
        },
        functions = {
            { name = "can_see", rval = "bool", args = { "tripoint", "player" } },
            { name = "count", static = true, rval = "int", args = { } },
            { name = "detect_trap", rval = "bool", args = { "tripoint", "player" } },
            { name = "funnel_turns_per_charge", rval = "float", args = { "float" } },
            { name = "get_avoidance", rval = "int", args = { } },
            { name = "get_difficulty", rval = "int", args = { } },
            { name = "get_visibility", rval = "int", args = { } },
            { name = "is_3x3_trap", rval = "bool", args = { } },
            { name = "is_benign", rval = "bool", args = { } },
            { name = "is_funnel", rval = "bool", args = { } },
            { name = "is_null", rval = "bool", args = { } },
            { name = "on_disarmed", rval = nil, args = { "tripoint" } },
            { name = "trigger", rval = nil, args = { "tripoint", "Creature" } },
            { name = "triggered_by_item", rval = "bool", args = { "item" } },
        }
    },
    w_point = {
        attributes = {
            acidic = { type = "bool", writable = true },
            humidity = { type = "float", writable = true },
            pressure = { type = "float", writable = true },
            temperature = { type = "float", writable = true },
            windpower = { type = "float", writable = true },
        },
    },
    vehicle = {
        attributes = {
            alarm_epower = { type = "int", writable = true },
            alternator_load = { type = "float", writable = true },
            camera_epower = { type = "int", writable = true },
            camera_on = { type = "bool", writable = true },
            check_environmental_effects = { type = "bool", writable = true },
            cruise_on = { type = "bool", writable = true },
            cruise_velocity = { type = "int", writable = true },
            engine_on = { type = "bool", writable = true },
            extra_drag = { type = "int", writable = true },
            falling = { type = "bool", writable = true },
            insides_dirty = { type = "bool", writable = true },
            is_alarm_on = { type = "bool", writable = true },
            is_locked = { type = "bool", writable = true },
            last_repair_turn = { type = "calendar", writable = true },
            last_turn = { type = "int", writable = true },
            last_update_turn = { type = "calendar", writable = true },
            name = { type = "std::string", writable = true },
            occupied_cache_turn = { type = "calendar", writable = true },
            occupied_points = { type = "std::set<tripoint>", writable = true },
            of_turn = { type = "float", writable = true },
            of_turn_carry = { type = "float", writable = true },
            om_id = { type = "int", writable = true },
            parts = { type = "std::vector<vehicle_part>", writable = true },
            posx = { type = "int", writable = true },
            posy = { type = "int", writable = true },
            removed_part_count = { type = "int", writable = true },
            skidding = { type = "bool", writable = true },
            smx = { type = "int", writable = true },
            smy = { type = "int", writable = true },
            smz = { type = "int", writable = true },
            tags = { type = "std::set<std::string>", writable = true },
            tracking_epower = { type = "int", writable = true },
            tracking_on = { type = "bool", writable = true },
            turn_dir = { type = "int", writable = true },
            velocity = { type = "int", writable = true },
            vertical_velocity = { type = "int", writable = true },
        },
        functions = {
            { name = "acceleration", rval = "int", args = { "bool" } },
            { name = "acceleration", rval = "int", args = { } },
            { name = "add_item", rval = "bool", args = { "int", "item" } },
            { name = "add_item", rval = "bool", args = { "vehicle_part", "item" } },
            { name = "add_item_at", rval = "bool", args = { "int", "std::list<item>::iterator", "item" } },
            { name = "alarm", rval = nil, args = { } },
            { name = "backfire", rval = nil, args = { "int" } },
            { name = "balanced_wheel_config", rval = "bool", args = { "bool" } },
            { name = "basic_consumption", rval = "int", args = { "std::string" } },
            { name = "beeper_sound", rval = nil, args = { } },
            { name = "break_part_into_pieces", rval = nil, args = { "int", "int", "int" } },
            { name = "break_part_into_pieces", rval = nil, args = { "int", "int", "int", "bool" } },
            { name = "can_enable", rval = "bool", args = { "vehicle_part" } },
            { name = "can_enable", rval = "bool", args = { "vehicle_part", "bool" } },
            { name = "can_mount", rval = "bool", args = { "int", "int", "vpart_str_id" } },
            { name = "can_unmount", rval = "bool", args = { "int" } },
            { name = "charge_battery", rval = "int", args = { "int" } },
            { name = "charge_battery", rval = "int", args = { "int", "bool" } },
            { name = "close", rval = nil, args = { "int" } },
            { name = "consume_fuel", rval = nil, args = { "float" } },
            { name = "control_doors", rval = nil, args = { } },
            { name = "control_engines", rval = nil, args = { } },
            { name = "coord_translate", rval = "point", args = { "point" } },
            { name = "coord_translate", rval = nil, args = { "int", "point", "point", "point" } },
            { name = "cruise_thrust", rval = nil, args = { "int" } },
            { name = "damage", rval = "int", args = { "int", "int" } },
            { name = "damage", rval = "int", args = { "int", "int", "damage_type" } },
            { name = "damage", rval = "int", args = { "int", "int", "damage_type", "bool" } },
            { name = "damage_all", rval = nil, args = { "int", "int", "damage_type", "point" } },
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "discharge_battery", rval = "int", args = { "int" } },
            { name = "discharge_battery", rval = "int", args = { "int", "bool" } },
            { name = "disp_name", rval = "std::string", args = { } },
            { name = "do_engine_damage", rval = nil, args = { "int", "int" } },
            { name = "drag", rval = "float", args = { } },
            { name = "drain", rval = "int", args = { "std::string", "int" } },
            { name = "find_part", rval = "int", args = { "item" } },
            { name = "fold_up", rval = "bool", args = { } },
            { name = "forward_velocity", rval = "float", args = { } },
            { name = "free_volume", rval = "int", args = { "int" } },
            { name = "fuel_capacity", rval = "int", args = { "std::string" } },
            { name = "fuel_left", rval = "int", args = { "std::string" } },
            { name = "fuel_left", rval = "int", args = { "std::string", "bool" } },
            { name = "gain_moves", rval = nil, args = { } },
            { name = "get_items", rval = "vehicle_stack", args = { "int" } },
            { name = "get_label", rval = "std::string", args = { "int", "int" } },
            { name = "get_passenger", rval = "player&", args = { "int" } },
            { name = "get_points", rval = "std::set<tripoint>", args = { "bool" } },
            { name = "get_points", rval = "std::set<tripoint>", args = { } },
            { name = "get_printable_fuel_types", rval = "std::vector<std::string>", args = { "bool" } },
            { name = "global_part_at", rval = "int", args = { "int", "int" } },
            { name = "global_part_pos3", rval = "tripoint", args = { "int" } },
            { name = "global_part_pos3", rval = "tripoint", args = { "vehicle_part" } },
            { name = "global_pos", rval = "point", args = { } },
            { name = "global_pos3", rval = "tripoint", args = { } },
            { name = "global_x", rval = "int", args = { } },
            { name = "global_y", rval = "int", args = { } },
            { name = "handle_trap", rval = nil, args = { "tripoint", "int" } },
            { name = "handling_difficulty", rval = "float", args = { } },
            { name = "has_engine_type", rval = "bool", args = { "std::string", "bool" } },
            { name = "has_engine_type_not", rval = "bool", args = { "std::string", "bool" } },
            { name = "has_part", rval = "bool", args = { "std::string" } },
            { name = "has_part", rval = "bool", args = { "std::string", "bool" } },
            { name = "has_security_working", rval = "bool", args = { } },
            { name = "honk_horn", rval = nil, args = { } },
            { name = "idle", rval = nil, args = { "bool" } },
            { name = "idle", rval = nil, args = { } },
            { name = "index_of_part", rval = "int", args = { "vehicle_part" } },
            { name = "index_of_part", rval = "int", args = { "vehicle_part", "bool" } },
            { name = "init_state", rval = nil, args = { "int", "int" } },
            { name = "install_part", rval = "int", args = { "int", "int", "vehicle_part" } },
            { name = "install_part", rval = "int", args = { "int", "int", "vpart_str_id" } },
            { name = "install_part", rval = "int", args = { "int", "int", "vpart_str_id", "bool" } },
            { name = "interact_vehicle_locked", rval = "bool", args = { } },
            { name = "invalidate_mass", rval = nil, args = { } },
            { name = "is_alternator_on", rval = "bool", args = { "int" } },
            { name = "is_engine_on", rval = "bool", args = { "int" } },
            { name = "is_engine_type", rval = "bool", args = { "int", "std::string" } },
            { name = "is_engine_type_on", rval = "bool", args = { "int", "std::string" } },
            { name = "is_foldable", rval = "bool", args = { } },
            { name = "is_full", rval = "bool", args = { "int" } },
            { name = "is_full", rval = "bool", args = { "int", "int" } },
            { name = "is_full", rval = "bool", args = { "int", "int", "int" } },
            { name = "is_inside", rval = "bool", args = { "int" } },
            { name = "is_part_on", rval = "bool", args = { "int" } },
            { name = "k_aerodynamics", rval = "float", args = { } },
            { name = "k_dynamics", rval = "float", args = { } },
            { name = "k_friction", rval = "float", args = { } },
            { name = "k_mass", rval = "float", args = { } },
            { name = "k_traction", rval = "float", args = { "float" } },
            { name = "lift_strength", rval = "int", args = { } },
            { name = "local_center_of_mass", rval = "point", args = { } },
            { name = "max_velocity", rval = "int", args = { "bool" } },
            { name = "max_velocity", rval = "int", args = { } },
            { name = "max_volume", rval = "int", args = { "int" } },
            { name = "mod_hp", rval = "bool", args = { "vehicle_part", "int" } },
            { name = "mod_hp", rval = "bool", args = { "vehicle_part", "int", "damage_type" } },
            { name = "next_part_to_close", rval = "int", args = { "int" } },
            { name = "next_part_to_close", rval = "int", args = { "int", "bool" } },
            { name = "next_part_to_open", rval = "int", args = { "int" } },
            { name = "next_part_to_open", rval = "int", args = { "int", "bool" } },
            { name = "noise_and_smoke", rval = nil, args = { "float" } },
            { name = "noise_and_smoke", rval = nil, args = { "float", "float" } },
            { name = "obstacle_at_part", rval = "int", args = { "int" } },
            { name = "on_move", rval = nil, args = { } },
            { name = "open", rval = nil, args = { "int" } },
            { name = "open_all_at", rval = nil, args = { "int" } },
            { name = "operate_planter", rval = nil, args = { } },
            { name = "operate_plow", rval = nil, args = { } },
            { name = "operate_reaper", rval = nil, args = { } },
            { name = "operate_scoop", rval = nil, args = { } },
            { name = "part_at", rval = "int", args = { "int", "int" } },
            { name = "part_color", rval = "int", args = { "int" } },
            { name = "part_color", rval = "int", args = { "int", "bool" } },
            { name = "part_displayed_at", rval = "int", args = { "int", "int" } },
            { name = "part_flag", rval = "bool", args = { "int", "std::string" } },
            { name = "part_info", rval = "vpart_info&", args = { "int" } },
            { name = "part_info", rval = "vpart_info&", args = { "int", "bool" } },
            { name = "part_removal_cleanup", rval = nil, args = { } },
            { name = "part_sym", rval = "int", args = { "int" } },
            { name = "part_sym", rval = "int", args = { "int", "bool" } },
            { name = "part_with_feature", rval = "int", args = { "int", "std::string" } },
            { name = "part_with_feature", rval = "int", args = { "int", "std::string", "bool" } },
            { name = "part_with_feature_at_relative", rval = "int", args = { "point", "std::string" } },
            { name = "part_with_feature_at_relative", rval = "int", args = { "point", "std::string", "bool" } },
            { name = "pivot_displacement", rval = "point", args = { } },
            { name = "pivot_point", rval = "point", args = { } },
            { name = "place_spawn_items", rval = nil, args = { } },
            { name = "play_chimes", rval = nil, args = { } },
            { name = "play_music", rval = nil, args = { } },
            { name = "player_in_control", rval = "bool", args = { "player" } },
            { name = "possibly_recover_from_skid", rval = nil, args = { } },
            { name = "power_parts", rval = nil, args = { } },
            { name = "precalc_mounts", rval = nil, args = { "int", "int", "point" } },
            { name = "real_global_pos", rval = "point", args = { } },
            { name = "real_global_pos3", rval = "tripoint", args = { } },
            { name = "refill", rval = "int", args = { "std::string", "int" } },
            { name = "refresh_insides", rval = nil, args = { } },
            { name = "remote_controlled", rval = "bool", args = { "player" } },
            { name = "remove_item", rval = "bool", args = { "int", "int" } },
            { name = "remove_item", rval = "bool", args = { "int", "item" } },
            { name = "remove_item", rval = "std::list<item>::iterator", args = { "int", "std::list<item>::iterator" } },
            { name = "remove_part", rval = "bool", args = { "int" } },
            { name = "remove_remote_part", rval = nil, args = { "int" } },
            { name = "restore", rval = "bool", args = { "std::string" } },
            { name = "roof_at_part", rval = "int", args = { "int" } },
            { name = "rotated_center_of_mass", rval = "point", args = { } },
            { name = "safe_velocity", rval = "int", args = { "bool" } },
            { name = "safe_velocity", rval = "int", args = { } },
            { name = "select_engine", rval = "int", args = { } },
            { name = "serialize", rval = "std::string", args = { } },
            { name = "set_hp", rval = nil, args = { "vehicle_part", "int" } },
            { name = "set_label", rval = nil, args = { "int", "int", "std::string" } },
            { name = "set_submap_moved", rval = nil, args = { "int", "int" } },
            { name = "shed_loose_parts", rval = nil, args = { } },
            { name = "shift_if_needed", rval = "bool", args = { } },
            { name = "shift_parts", rval = nil, args = { "point" } },
            { name = "slow_leak", rval = nil, args = { } },
            { name = "smash", rval = nil, args = { } },
            { name = "spew_smoke", rval = nil, args = { "float", "int" } },
            { name = "spew_smoke", rval = nil, args = { "float", "int", "int" } },
            { name = "start_engine", rval = "bool", args = { "int" } },
            { name = "start_engines", rval = nil, args = { "bool" } },
            { name = "start_engines", rval = nil, args = { } },
            { name = "steering_effectiveness", rval = "float", args = { } },
            { name = "stop", rval = nil, args = { } },
            { name = "stored_volume", rval = "int", args = { "int" } },
            { name = "strain", rval = "float", args = { } },
            { name = "sufficient_wheel_config", rval = "bool", args = { "bool" } },
            { name = "thrust", rval = nil, args = { "int" } },
            { name = "toggle_specific_engine", rval = nil, args = { "int", "bool" } },
            { name = "toggle_specific_part", rval = nil, args = { "int", "bool" } },
            { name = "total_mass", rval = "int", args = { } },
            { name = "total_power", rval = "int", args = { "bool" } },
            { name = "total_power", rval = "int", args = { } },
            { name = "turn", rval = nil, args = { "int" } },
            { name = "turrets_aim", rval = "bool", args = { } },
            { name = "turrets_set_mode", rval = nil, args = { } },
            { name = "turrets_set_targeting", rval = nil, args = { } },
            { name = "unboard_all", rval = nil, args = { } },
            { name = "update_time", rval = nil, args = { "calendar" } },
            { name = "use_controls", rval = nil, args = { "tripoint" } },
            { name = "valid_wheel_config", rval = "bool", args = { "bool" } },
            { name = "wheel_area", rval = "float", args = { "bool" } },
        }
    },
    vehicle_part = {
        new = {
            { },
        },
        by_value_and_reference = true,
        attributes = {
            blood = { type = "int", writable = true },
            direction = { type = "int", writable = true },
            enabled = { type = "bool", writable = true },
            flags = { type = "int", writable = true },
            inside = { type = "bool", writable = true },
            mount = { type = "point", writable = true },
            open = { type = "bool", writable = true },
            passenger_id = { type = "int", writable = true },
            removed = { type = "bool", writable = true },
        },
        functions = {
            { name = "ammo_capacity", rval = "int", args = { } },
            { name = "ammo_consume", rval = "int", args = { "int", "tripoint" } },
            { name = "ammo_current", rval = "std::string", args = { } },
            { name = "ammo_remaining", rval = "int", args = { } },
            { name = "ammo_set", rval = "int", args = { "std::string" } },
            { name = "ammo_set", rval = "int", args = { "std::string", "int" } },
            { name = "ammo_unset", rval = nil, args = { } },
            { name = "can_reload", rval = "bool", args = { "std::string" } },
            { name = "can_reload", rval = "bool", args = { } },
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "fault_set", rval = "bool", args = { "fault_id" } },
            { name = "faults", rval = "std::set<fault_id>", args = { } },
            { name = "faults_potential", rval = "std::set<fault_id>", args = { } },
            { name = "get_id", rval = "vpart_str_id", args = { } },
            { name = "has_flag", rval = "bool", args = { "int" } },
            { name = "hp", rval = "int", args = { } },
            { name = "info", rval = "vpart_info&", args = { } },
            { name = "is_battery", rval = "bool", args = { } },
            { name = "is_broken", rval = "bool", args = { } },
            { name = "is_engine", rval = "bool", args = { } },
            { name = "is_light", rval = "bool", args = { } },
            { name = "is_tank", rval = "bool", args = { } },
            { name = "is_turret", rval = "bool", args = { } },
            { name = "name", rval = "std::string", args = { } },
            { name = "properties_to_item", rval = "item", args = { } },
            { name = "remove_flag", rval = "int", args = { "int" } },
            { name = "serialize", rval = "std::string", args = { } },
            { name = "set_flag", rval = "int", args = { "int" } },
            { name = "wheel_area", rval = "int", args = { } },
            { name = "wheel_diameter", rval = "int", args = { } },
            { name = "wheel_width", rval = "int", args = { } },
        }
    },
    vehicle_stack = {
        by_value = true,
        functions = {
            { name = "cppbegin", rval = "std::list<item>::iterator", cpp_name = "begin", args = { } },
            { name = "cppend", rval = "std::list<item>::iterator", cpp_name = "end", args = { } },
            { name = "empty", rval = "bool", args = { } },
            { name = "erase", rval = "std::list<item>::iterator", args = { "std::list<item>::iterator" } },
            { name = "front", rval = "item&", args = { } },
            { name = "insert_at", rval = nil, args = { "std::list<item>::iterator", "item" } },
            { name = "push_back", rval = nil, args = { "item" } },
            { name = "size", rval = "int", args = { } },
        }
    },
    vpart_info = {
        string_id = "vpart_str_id",
        int_id = "vpart_id",
        attributes = {
            bonus = { type = "int", writable = true },
            breaks_into_group = { type = "std::string", writable = true },
            color = { type = "int", writable = true },
            color_broken = { type = "int", writable = true },
            difficulty = { type = "int", writable = true },
            dmg_mod = { type = "int", writable = true },
            durability = { type = "int", writable = true },
            epower = { type = "int", writable = true },
            folded_volume = { type = "int", writable = true },
            fuel_type = { type = "std::string", writable = true },
            id = { type = "vpart_str_id" },
            install_moves = { type = "int", writable = true },
            item = { type = "std::string", writable = true },
            legacy = { type = "bool", writable = true },
            list_order = { type = "int", writable = true },
            loadid = { type = "vpart_id" },
            location = { type = "std::string", writable = true },
            power = { type = "int", writable = true },
            removal_moves = { type = "int", writable = true },
            size = { type = "int", writable = true },
            sym = { type = "int", writable = true },
            sym_broken = { type = "int", writable = true },
            z_order = { type = "int", writable = true },
        },
        functions = {
            { name = "check", static = true, rval = nil, args = { } },
            { name = "has_flag", rval = "bool", args = { "std::string" } },
            { name = "install_time", rval = "int", args = { "Character" } },
            { name = "name", rval = "std::string", args = { } },
            { name = "removal_time", rval = "int", args = { "Character" } },
            { name = "set_flag", rval = nil, args = { "std::string" } },
        }
    },
    fault = {
        string_id = "fault_id",
        functions = {
            { name = "description", rval = "std::string", args = { } },
            { name = "id", rval = "fault_id", args = { } },
            { name = "is_null", rval = "bool", args = { } },
            { name = "name", rval = "std::string", args = { } },
            { name = "time", rval = "int", args = { } },
        }
    },
    effect = {
        functions = {
            { name = "activated", rval = "bool", args = { "int", "std::string", "int" } },
            { name = "activated", rval = "bool", args = { "int", "std::string", "int", "bool" } },
            { name = "activated", rval = "bool", args = { "int", "std::string", "int", "bool", "float" } },
            { name = "decay", rval = nil, args = { "std::vector<efftype_id>", "std::vector<body_part>", "int", "bool" } },
            { name = "deserialize", rval = nil, args = { "std::string" } },
            { name = "disp_desc", rval = "std::string", args = { "bool" } },
            { name = "disp_desc", rval = "std::string", args = { } },
            { name = "disp_name", rval = "std::string", args = { } },
            { name = "get_addict_mod", rval = "float", args = { "std::string", "int" } },
            { name = "get_amount", rval = "int", args = { "std::string" } },
            { name = "get_amount", rval = "int", args = { "std::string", "bool" } },
            { name = "get_avg_mod", rval = "int", args = { "std::string" } },
            { name = "get_avg_mod", rval = "int", args = { "std::string", "bool" } },
            { name = "get_blocks_effects", rval = "std::vector<efftype_id>", args = { } },
            { name = "get_bp", rval = "body_part", args = { } },
            { name = "get_dur_add_perc", rval = "int", args = { } },
            { name = "get_duration", rval = "int", args = { } },
            { name = "get_effect_type", rval = "effect_type&", args = { } },
            { name = "get_harmful_cough", rval = "bool", args = { } },
            { name = "get_id", rval = "efftype_id", args = { } },
            { name = "get_int_add_val", rval = "int", args = { } },
            { name = "get_int_dur_factor", rval = "int", args = { } },
            { name = "get_intensity", rval = "int", args = { } },
            { name = "get_max_duration", rval = "int", args = { } },
            { name = "get_max_intensity", rval = "int", args = { } },
            { name = "get_max_val", rval = "int", args = { "std::string" } },
            { name = "get_max_val", rval = "int", args = { "std::string", "bool" } },
            { name = "get_min_val", rval = "int", args = { "std::string" } },
            { name = "get_min_val", rval = "int", args = { "std::string", "bool" } },
            { name = "get_mod", rval = "int", args = { "std::string" } },
            { name = "get_mod", rval = "int", args = { "std::string", "bool" } },
            { name = "get_percentage", rval = "float", args = { "std::string", "int" } },
            { name = "get_percentage", rval = "float", args = { "std::string", "int", "bool" } },
            { name = "get_removes_effects", rval = "std::vector<efftype_id>", args = { } },
            { name = "get_resist_effects", rval = "std::vector<efftype_id>", args = { } },
            { name = "get_resist_traits", rval = "std::vector<std::string>", args = { } },
            { name = "get_sizing", rval = "bool", args = { "std::string" } },
            { name = "get_speed_name", rval = "std::string", args = { } },
            { name = "get_start_turn", rval = "int", args = { } },
            { name = "is_null", rval = "bool", args = { } },
            { name = "is_permanent", rval = "bool", args = { } },
            { name = "mod_duration", rval = nil, args = { "int" } },
            { name = "mod_intensity", rval = "int", args = { "int" } },
            { name = "mod_intensity", rval = "int", args = { "int", "bool" } },
            { name = "mult_duration", rval = nil, args = { "float" } },
            { name = "pause_effect", rval = nil, args = { } },
            { name = "serialize", rval = "std::string", args = { } },
            { name = "set_bp", rval = nil, args = { "body_part" } },
            { name = "set_duration", rval = nil, args = { "int" } },
            { name = "set_intensity", rval = "int", args = { "int" } },
            { name = "set_intensity", rval = "int", args = { "int", "bool" } },
            { name = "unpause_effect", rval = nil, args = { } },
            { name = "use_part_descs", rval = "bool", args = { } },
        }
    },
    vitamin = {
        string_id = "vitamin_id",
        functions = {
            { name = "deficiency", rval = "efftype_id", args = { } },
            { name = "excess", rval = "efftype_id", args = { } },
            { name = "id", rval = "vitamin_id", args = { } },
            { name = "is_null", rval = "bool", args = { } },
            { name = "max", rval = "int", args = { } },
            { name = "min", rval = "int", args = { } },
            { name = "name", rval = "std::string", args = { } },
            { name = "rate", rval = "int", args = { } },
            { name = "severity", rval = "int", args = { "int" } },
        }
    },
    npc = {
        parent = "player",
        attributes = {
            companion_mission = { type = "std::string", writable = true },
            companion_mission_time = { type = "int", writable = true },
            fac_id = { type = "std::string", writable = true },
            fetching_item = { type = "bool", writable = true },
            goal = { type = "tripoint", writable = true },
            guard_pos = { type = "tripoint", writable = true },
            has_new_items = { type = "bool", writable = true },
            hit_by_player = { type = "bool", writable = true },
            idz = { type = "std::string", writable = true },
            last_player_seen_pos = { type = "tripoint", writable = true },
            last_seen_player_turn = { type = "int", writable = true },
            last_updated = { type = "int", writable = true },
            marked_for_death = { type = "bool", writable = true },
            path = { type = "std::vector<tripoint>", writable = true },
            patience = { type = "int", writable = true },
            pulp_location = { type = "tripoint", writable = true },
            restock = { type = "int", writable = true },
            wander_pos = { type = "tripoint", writable = true },
            wander_time = { type = "int", writable = true },
            wanted_item_pos = { type = "tripoint", writable = true },
            worst_item_value = { type = "int", writable = true },
        },
        functions = {
            { name = "activate_item", rval = nil, args = { "int" } },
            { name = "adjust_worn", rval = "bool", args = { } },
            { name = "aim", rval = nil, args = { } },
            { name = "alt_attack", rval = "bool", args = { } },
            { name = "assess_danger", rval = nil, args = { } },
            { name = "assigned_missions_value", rval = "int", args = { } },
            { name = "average_damage_dealt", rval = "float", args = { } },
            { name = "avoid_friendly_fire", rval = nil, args = { } },
            { name = "best_skill", rval = "skill_id", args = { } },
            { name = "bravery_check", rval = "bool", args = { "int" } },
            { name = "can_move_to", rval = "bool", args = { "tripoint" } },
            { name = "can_move_to", rval = "bool", args = { "tripoint", "bool" } },
            { name = "can_reload_current", rval = "bool", args = { } },
            { name = "character_danger", rval = "float", args = { "Character" } },
            { name = "choose_target", rval = nil, args = { } },
            { name = "complain", rval = "bool", args = { } },
            { name = "confidence_mult", rval = "float", args = { } },
            { name = "confident_shoot_range", rval = "int", args = { "item" } },
            { name = "confident_throw_range", rval = "int", args = { "item" } },
            { name = "consume_food", rval = "bool", args = { } },
            { name = "current_target", rval = "Creature&", args = { } },
            { name = "danger_assessment", rval = "float", args = { } },
            { name = "decide_needs", rval = nil, args = { } },
            { name = "do_pulp", rval = "bool", args = { } },
            { name = "do_reload", rval = nil, args = { "item" } },
            { name = "drop_items", rval = nil, args = { "int", "int" } },
            { name = "emergency", rval = "bool", args = { "float" } },
            { name = "emergency", rval = "bool", args = { } },
            { name = "enough_time_to_reload", rval = "bool", args = { "item" } },
            { name = "evaluate_enemy", rval = "float", args = { "Creature" } },
            { name = "find_corpse_to_pulp", rval = "bool", args = { } },
            { name = "find_item", rval = nil, args = { } },
            { name = "find_npc", rval = "npc&", args = { "std::string" } },
            { name = "find_reloadable", rval = "item&", args = { } },
            { name = "follow_distance", rval = "int", args = { } },
            { name = "form_opinion", rval = nil, args = { "player" } },
            { name = "get_healing_item", rval = "item&", args = { "bool" } },
            { name = "get_healing_item", rval = "item&", args = { "bool", "bool" } },
            { name = "get_healing_item", rval = "item&", args = { "bool", "bool", "bool" } },
            { name = "get_healing_item", rval = "item&", args = { "bool", "bool", "bool", "bool" } },
            { name = "get_healing_item", rval = "item&", args = { } },
            { name = "go_to_destination", rval = nil, args = { } },
            { name = "guard_current_pos", rval = nil, args = { } },
            { name = "has_destination", rval = "bool", args = { } },
            { name = "has_healing_item", rval = "bool", args = { "bool" } },
            { name = "has_healing_item", rval = "bool", args = { "bool", "bool" } },
            { name = "has_healing_item", rval = "bool", args = { "bool", "bool", "bool" } },
            { name = "has_healing_item", rval = "bool", args = { } },
            { name = "has_item_whitelist", rval = "bool", args = { } },
            { name = "has_painkiller", rval = "bool", args = { } },
            { name = "heal_player", rval = nil, args = { "player" } },
            { name = "heal_self", rval = nil, args = { } },
            { name = "hostile_anger_level", rval = "int", args = { } },
            { name = "is_active", rval = "bool", args = { } },
            { name = "is_dead", rval = "bool", args = { } },
            { name = "is_enemy", rval = "bool", args = { } },
            { name = "is_following", rval = "bool", args = { } },
            { name = "is_friend", rval = "bool", args = { } },
            { name = "is_guarding", rval = "bool", args = { } },
            { name = "is_leader", rval = "bool", args = { } },
            { name = "is_minion", rval = "bool", args = { } },
            { name = "item_whitelisted", rval = "bool", args = { "item" } },
            { name = "load_npc_template", rval = nil, args = { "std::string" } },
            { name = "look_for_player", rval = nil, args = { "player" } },
            { name = "make_angry", rval = nil, args = { } },
            { name = "minimum_item_value", rval = "int", args = { } },
            { name = "move", rval = nil, args = { } },
            { name = "move_away_from", rval = nil, args = { "tripoint" } },
            { name = "move_away_from", rval = nil, args = { "tripoint", "bool" } },
            { name = "move_pause", rval = nil, args = { } },
            { name = "move_to", rval = nil, args = { "tripoint" } },
            { name = "move_to", rval = nil, args = { "tripoint", "bool" } },
            { name = "move_to_next", rval = nil, args = { } },
            { name = "mug_player", rval = nil, args = { "player" } },
            { name = "on_load", rval = nil, args = { } },
            { name = "on_unload", rval = nil, args = { } },
            { name = "opinion_text", rval = "std::string", args = { } },
            { name = "pick_long_term_goal", rval = nil, args = { } },
            { name = "pick_talk_topic", rval = "std::string", args = { "player" } },
            { name = "pick_up_item", rval = nil, args = { } },
            { name = "pick_up_item_map", rval = "std::list<item>", args = { "tripoint" } },
            { name = "pick_up_item_vehicle", rval = "std::list<item>", args = { "vehicle", "int" } },
            { name = "place_on_map", rval = nil, args = { } },
            { name = "randomize", rval = nil, args = { } },
            { name = "reach_destination", rval = nil, args = { } },
            { name = "regen_ai_cache", rval = nil, args = { } },
            { name = "saw_player_recently", rval = "bool", args = { } },
            { name = "say", rval = nil, args = { "std::string" } },
            { name = "scan_new_items", rval = "bool", args = { } },
            { name = "set_destination", rval = nil, args = { } },
            { name = "set_fac", rval = nil, args = { "std::string" } },
            { name = "shift", rval = nil, args = { "int", "int" } },
            { name = "shop_restock", rval = nil, args = { } },
            { name = "short_description", rval = "std::string", args = { } },
            { name = "skills_offered_to", rval = "std::vector<skill_id>", args = { "player" } },
            { name = "smash_ability", rval = "int", args = { } },
            { name = "spawn_at", rval = nil, args = { "int", "int", "int" } },
            { name = "spawn_at_random_city", rval = nil, args = { "overmap" } },
            { name = "styles_offered_to", rval = "std::vector<matype_id>", args = { "player" } },
            { name = "talk_to_u", rval = nil, args = { } },
            { name = "took_painkiller", rval = "bool", args = { } },
            { name = "turned_hostile", rval = "bool", args = { } },
            { name = "update_path", rval = "bool", args = { "tripoint" } },
            { name = "update_path", rval = "bool", args = { "tripoint", "bool" } },
            { name = "update_path", rval = "bool", args = { "tripoint", "bool", "bool" } },
            { name = "update_worst_item_value", rval = nil, args = { } },
            { name = "use_painkiller", rval = nil, args = { } },
            { name = "value", rval = "int", args = { "item" } },
            { name = "value", rval = "int", args = { "item", "int" } },
            { name = "vehicle_danger", rval = "float", args = { "int" } },
            { name = "wants_to_buy", rval = "bool", args = { "item" } },
            { name = "wants_to_buy", rval = "bool", args = { "item", "int", "int" } },
            { name = "wants_to_sell", rval = "bool", args = { "item" } },
            { name = "wants_to_sell", rval = "bool", args = { "item", "int", "int" } },
            { name = "wear_if_wanted", rval = "bool", args = { "item" } },
            { name = "wield_best_melee", rval = nil, args = { } },
            { name = "wield_better_weapon", rval = "bool", args = { } },
            { name = "will_accept_from_player", rval = "bool", args = { "item" } },
            { name = "wont_hit_friend", rval = "bool", args = { "tripoint", "item", "bool" } },
        }
    },
}

enums = {
    body_part = {
        "bp_torso",
        "bp_head",
        "bp_eyes",
        "bp_mouth",
        "bp_arm_l",
        "bp_arm_r",
        "bp_hand_l",
        "bp_hand_r",
        "bp_leg_l",
        "bp_leg_r",
        "bp_foot_l",
        "bp_foot_r",
        "num_bp",
    },
    hp_part = {
        "hp_head",
        "hp_torso",
        "hp_arm_l",
        "hp_arm_r",
        "hp_leg_l",
        "hp_leg_r",
        "num_hp_parts",
    },
    morale_type = {
        "MORALE_NULL",
        "MORALE_FOOD_GOOD",
        "MORALE_FOOD_HOT",
        "MORALE_MUSIC",
        "MORALE_HONEY",
        "MORALE_GAME",
        "MORALE_MARLOSS",
        "MORALE_MUTAGEN",
        "MORALE_FEELING_GOOD",
        "MORALE_SUPPORT",
        "MORALE_PHOTOS",
        "MORALE_CRAVING_NICOTINE",
        "MORALE_CRAVING_CAFFEINE",
        "MORALE_CRAVING_ALCOHOL",
        "MORALE_CRAVING_OPIATE",
        "MORALE_CRAVING_SPEED",
        "MORALE_CRAVING_COCAINE",
        "MORALE_CRAVING_CRACK",
        "MORALE_CRAVING_MUTAGEN",
        "MORALE_CRAVING_DIAZEPAM",
        "MORALE_CRAVING_MARLOSS",
        "MORALE_FOOD_BAD",
        "MORALE_CANNIBAL",
        "MORALE_VEGETARIAN",
        "MORALE_MEATARIAN",
        "MORALE_ANTIFRUIT",
        "MORALE_LACTOSE",
        "MORALE_ANTIJUNK",
        "MORALE_ANTIWHEAT",
        "MORALE_NO_DIGEST",
        "MORALE_WET",
        "MORALE_DRIED_OFF",
        "MORALE_COLD",
        "MORALE_HOT",
        "MORALE_FEELING_BAD",
        "MORALE_KILLED_INNOCENT",
        "MORALE_KILLED_FRIEND",
        "MORALE_KILLED_MONSTER",
        "MORALE_MUTILATE_CORPSE",
        "MORALE_MUTAGEN_ELF",
        "MORALE_MUTAGEN_CHIMERA",
        "MORALE_MUTAGEN_MUTATION",
        "MORALE_MOODSWING",
        "MORALE_BOOK",
        "MORALE_COMFY",
        "MORALE_SCREAM",
        "MORALE_PERM_MASOCHIST",
        "MORALE_PERM_HOARDER",
        "MORALE_PERM_FANCY",
        "MORALE_PERM_OPTIMIST",
        "MORALE_PERM_BADTEMPER",
        "MORALE_PERM_CONSTRAINED",
        "MORALE_GAME_FOUND_KITTEN",
        "MORALE_HAIRCUT",
        "MORALE_SHAVE",
        "MORALE_VOMITED",
        "MORALE_PERM_FILTHY",
        "NUM_MORALE_TYPES",
    },
    phase_id = {
        "PNULL",
        "SOLID",
        "LIQUID",
        "GAS",
        "PLASMA",
    },
    m_size = {
        "MS_TINY",
        "MS_SMALL",
        "MS_MEDIUM",
        "MS_LARGE",
        "MS_HUGE",
    },
    game_message_type = {
        "m_good",
        "m_bad",
        "m_mixed",
        "m_warning",
        "m_info",
        "m_neutral",
        "m_debug",
        "m_headshot",
        "m_critical",
        "m_grazing",
    },
    season_type = {
        "SPRING",
        "SUMMER",
        "AUTUMN",
        "WINTER",
    },
    add_type = {
        "ADD_NULL",
        "ADD_CAFFEINE",
        "ADD_ALCOHOL",
        "ADD_SLEEP",
        "ADD_PKILLER",
        "ADD_SPEED",
        "ADD_CIG",
        "ADD_COKE",
        "ADD_CRACK",
        "ADD_MUTAGEN",
        "ADD_DIAZEPAM",
        "ADD_MARLOSS_R",
        "ADD_MARLOSS_B",
        "ADD_MARLOSS_Y",
    },
    field_id = {
        "fd_null",
        "fd_blood",
        "fd_bile",
        "fd_gibs_flesh",
        "fd_gibs_veggy",
        "fd_web",
        "fd_slime",
        "fd_acid",
        "fd_sap",
        "fd_sludge",
        "fd_fire",
        "fd_rubble",
        "fd_smoke",
        "fd_toxic_gas",
        "fd_tear_gas",
        "fd_nuke_gas",
        "fd_gas_vent",
        "fd_fire_vent",
        "fd_flame_burst",
        "fd_electricity",
        "fd_fatigue",
        "fd_push_items",
        "fd_shock_vent",
        "fd_acid_vent",
        "fd_plasma",
        "fd_laser",
        "fd_spotlight",
        "fd_dazzling",
        "fd_blood_veggy",
        "fd_blood_insect",
        "fd_blood_invertebrate",
        "fd_gibs_insect",
        "fd_gibs_invertebrate",
        "fd_cigsmoke",
        "fd_weedsmoke",
        "fd_cracksmoke",
        "fd_methsmoke",
        "fd_bees",
        "fd_incendiary",
        "fd_relax_gas",
        "fd_fungal_haze",
        "fd_hot_air1",
        "fd_hot_air2",
        "fd_hot_air3",
        "fd_hot_air4",
        "fd_fungicidal_gas",
        "num_fields",
    },
    damage_type = {
        "DT_NULL",
        "DT_TRUE",
        "DT_BIOLOGICAL",
        "DT_BASH",
        "DT_CUT",
        "DT_ACID",
        "DT_STAB",
        "DT_HEAT",
        "DT_COLD",
        "DT_ELECTRIC",
        "NUM_DT",
    },
}

make_list_class("item")
make_set_class("fault_id")
make_set_class("matec_id")
make_set_class("material_id")
make_set_class("species_id")
make_set_class("std::string")
make_set_class("tripoint")
make_vector_class("body_part")
make_vector_class("efftype_id")
make_vector_class("item")
make_vector_class("mabuff_id")
make_vector_class("matec_id")
make_vector_class("material_id")
make_vector_class("matype_id")
make_vector_class("point")
make_vector_class("skill_id")
make_vector_class("std::string")
make_vector_class("tripoint")
make_vector_class("vehicle_part")
